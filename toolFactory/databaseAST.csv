ClassDefIdentifier,versionMajor,versionMinor,versionMicro,base,deprecated,base_typing_TypeAlias,fieldRename,typeC,typeStub,type_field_type,typeStub_typing_TypeAlias,list2Sequence,defaultValue,keywordArguments,kwargAnnotation,keywordArgumentsDefaultValue,classAs_astAttribute,classVersionMinorMinimum,attribute,attributeKind,attributeVersionMinorMinimum,TypeAliasSubcategory,type,ast_exprType,ast_arg
AST,3,13,3,object,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AST')",-1,No,No,-1,No,No,No,No
Add,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Add')",-1,No,No,-1,No,No,No,No
And,3,13,3,boolop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'And')",-1,No,No,-1,No,No,No,No
AnnAssign,3,13,3,stmt,False,No,No,expr,Name | Attribute | Subscript,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,target,_field,-1,NameOrAttributeOrSubscript,ast.Name | ast.Attribute | ast.Subscript,"ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript'))","ast.arg('target', ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript')))"
AnnAssign,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,annotation,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('annotation', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AnnAssign,3,13,3,stmt,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AnnAssign,3,13,3,stmt,False,No,No,int,int,int,No,False,"ast.Call(ast.Name('int'), args=[ast.Call(ast.Name('isinstance'), args=[ast.Name('target'), ast.Attribute(ast.Name('ast'), attr='Name')])])",True,int,"ast.Call(ast.Name('int'), args=[ast.Call(ast.Name('isinstance'), args=[ast.Name('target'), ast.Attribute(ast.Name('ast'), attr='Name')])])","ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,simple,_field,-1,int,int,ast.Name('int'),"ast.arg('simple', ast.Name('int'))"
AnnAssign,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AnnAssign,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AnnAssign,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AnnAssign,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Assert,3,13,3,stmt,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,msg,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('msg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Assert,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Assert,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,13,3,stmt,False,No,No,list(expr),list[expr],list[ast.expr],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,targets,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('targets', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Assign,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Assign,3,13,3,stmt,False,No,No,string | None,str | None,str | None,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Assign,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Assign,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AsyncFor,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AsyncFor,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFor,3,13,3,stmt,False,No,orElse,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFor,3,13,3,stmt,False,No,No,string | None,str | None,str | None,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncFor,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncFor,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,identifier,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,arguments,arguments,arguments,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,returns,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('returns', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,string | None,str | None,str | None,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,list(type_param),list[type_param],list[ast.type_param],No,True,ast.List(),True,type_params,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,type_params,_field,12,list_type_param,list[ast.type_param],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param'))","ast.arg('type_params', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param')))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,13,3,stmt,False,No,No,list(withitem),list[withitem],list[ast.withitem],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,items,_field,-1,list_withitem,list[ast.withitem],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem'))","ast.arg('items', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem')))"
AsyncWith,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncWith,3,13,3,stmt,False,No,No,string | None,str | None,str | None,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncWith,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncWith,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Attribute,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Attribute,3,13,3,expr,False,No,No,identifier,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,attr,_field,-1,str,str,ast.Name('str'),"ast.arg('attr', ast.Name('str'))"
Attribute,3,13,3,expr,False,No,context,expr_context,expr_context,expr_context,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Attribute,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Attribute,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Attribute,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Attribute,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugAssign,3,13,3,stmt,False,No,No,expr,Name | Attribute | Subscript,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,target,_field,-1,NameOrAttributeOrSubscript,ast.Name | ast.Attribute | ast.Subscript,"ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript'))","ast.arg('target', ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript')))"
AugAssign,3,13,3,stmt,False,No,No,operator,operator,operator,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,op,_field,-1,operator,ast.operator,"ast.Attribute(value=ast.Name('ast'), attr='operator')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='operator'))"
AugAssign,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AugAssign,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AugAssign,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AugAssign,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugAssign,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugLoad,3,13,3,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugLoad')",-1,No,No,-1,No,No,No,No
AugStore,3,13,3,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugStore')",-1,No,No,-1,No,No,No,No
Await,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Await,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Await,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Await,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Await,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BinOp,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,left,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('left', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
BinOp,3,13,3,expr,False,No,No,operator,operator,operator,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,op,_field,-1,operator,ast.operator,"ast.Attribute(value=ast.Name('ast'), attr='operator')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='operator'))"
BinOp,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,right,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('right', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
BinOp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
BinOp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
BinOp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BinOp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BitAnd,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitAnd')",-1,No,No,-1,No,No,No,No
BitOr,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitOr')",-1,No,No,-1,No,No,No,No
BitXor,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitXor')",-1,No,No,-1,No,No,No,No
BoolOp,3,13,3,expr,False,No,No,boolop,boolop,boolop,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,op,_field,-1,boolop,ast.boolop,"ast.Attribute(value=ast.Name('ast'), attr='boolop')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='boolop'))"
BoolOp,3,13,3,expr,False,No,No,list(expr),list[expr],list[ast.expr],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
BoolOp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
BoolOp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
BoolOp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BoolOp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Break,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Break,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Break,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Break,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Bytes,3,13,3,Constant,True,No,No,No,bytes,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,s,_field,-1,bytes,bytes,ast.Name('bytes'),"ast.arg('s', ast.Name('bytes'))"
Bytes,3,13,3,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Bytes,3,13,3,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Bytes,3,13,3,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Bytes,3,13,3,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Call,3,13,3,expr,False,No,callee,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,func,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('func', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Call,3,13,3,expr,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,args,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('args', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Call,3,13,3,expr,False,No,list_keyword,list(keyword),list[keyword],list[ast.keyword],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,keywords,_field,-1,list_keyword,list[ast.keyword],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword'))","ast.arg('keywords', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword')))"
Call,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Call,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Call,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Call,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ClassDef,3,13,3,stmt,False,No,No,identifier,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
ClassDef,3,13,3,stmt,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,bases,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('bases', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
ClassDef,3,13,3,stmt,False,No,list_keyword,list(keyword),list[keyword],list[ast.keyword],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,keywords,_field,-1,list_keyword,list[ast.keyword],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword'))","ast.arg('keywords', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword')))"
ClassDef,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
ClassDef,3,13,3,stmt,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
ClassDef,3,13,3,stmt,False,No,No,list(type_param),list[type_param],list[ast.type_param],No,True,ast.List(),True,type_params,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,type_params,_field,12,list_type_param,list[ast.type_param],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param'))","ast.arg('type_params', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param')))"
ClassDef,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ClassDef,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ClassDef,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ClassDef,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Compare,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,left,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('left', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Compare,3,13,3,expr,False,No,No,list(cmpop),list[cmpop],list[ast.cmpop],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,ops,_field,-1,list_cmpop,list[ast.cmpop],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='cmpop'))","ast.arg('ops', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='cmpop')))"
Compare,3,13,3,expr,False,No,No,list(expr),list[expr],list[ast.expr],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,comparators,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('comparators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Compare,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Compare,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Compare,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Compare,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,13,3,expr,False,No,No,constant,Any,object,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,value,_field,-1,Any,Any,ast.Name('Any'),"ast.arg('value', ast.Name('Any'))"
Constant,3,13,3,expr,False,No,No,string | None,str | None,str | None,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,kind,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('kind', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Constant,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Constant,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Continue,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Continue,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Continue,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Continue,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Del,3,13,3,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Del')",-1,No,No,-1,No,No,No,No
Delete,3,13,3,stmt,False,No,No,list(expr),list[expr],list[ast.expr],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,targets,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('targets', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Delete,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Delete,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Delete,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Delete,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Dict,3,13,3,expr,False,No,No,list(expr),list[expr | None],list[ast.expr],No,True,ast.List(ast.Constant(None)),False,No,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,keys,_field,-1,list_exprOrNone,list[ast.expr | None],"ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))","ast.arg('keys', ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))))"
Dict,3,13,3,expr,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Dict,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Dict,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Dict,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Dict,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
DictComp,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,key,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('key', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
DictComp,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
DictComp,3,13,3,expr,False,No,No,list(comprehension),list[comprehension],list[ast.comprehension],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
DictComp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
DictComp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
DictComp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
DictComp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Div,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Div')",-1,No,No,-1,No,No,No,No
Ellipsis,3,13,3,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Ellipsis,3,13,3,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Ellipsis,3,13,3,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Ellipsis,3,13,3,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Eq,3,13,3,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Eq')",-1,No,No,-1,No,No,No,No
ExceptHandler,3,13,3,excepthandler,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,type,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,13,3,excepthandler,False,No,No,identifier | None,str | None,str | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,name,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,13,3,excepthandler,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
ExceptHandler,3,13,3,excepthandler,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ExceptHandler,3,13,3,excepthandler,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ExceptHandler,3,13,3,excepthandler,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,13,3,excepthandler,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expr,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Expr,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Expr,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Expr,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expr,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expression,3,13,3,mod,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Expression')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
ExtSlice,3,13,3,slice,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ExtSlice')",-1,No,No,-1,No,No,No,No
FloorDiv,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FloorDiv')",-1,No,No,-1,No,No,No,No
For,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
For,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
For,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
For,3,13,3,stmt,False,No,orElse,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
For,3,13,3,stmt,False,No,No,string | None,str | None,str | None,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
For,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
For,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
For,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
For,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
FormattedValue,3,13,3,expr,False,No,No,int,int,int,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,conversion,_field,-1,int,int,ast.Name('int'),"ast.arg('conversion', ast.Name('int'))"
FormattedValue,3,13,3,expr,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,format_spec,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('format_spec', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
FormattedValue,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
FormattedValue,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,13,3,stmt,False,No,No,identifier,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
FunctionDef,3,13,3,stmt,False,No,No,arguments,arguments,arguments,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
FunctionDef,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
FunctionDef,3,13,3,stmt,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
FunctionDef,3,13,3,stmt,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,returns,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('returns', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,13,3,stmt,False,No,No,string | None,str | None,str | None,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,13,3,stmt,False,No,No,list(type_param),list[type_param],list[ast.type_param],No,True,ast.List(),True,type_params,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,type_params,_field,12,list_type_param,list[ast.type_param],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param'))","ast.arg('type_params', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param')))"
FunctionDef,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
FunctionDef,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
FunctionDef,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionType,3,13,3,mod,False,No,No,list(expr),list[expr],list[ast.expr],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionType')",-1,argtypes,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('argtypes', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
FunctionType,3,13,3,mod,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionType')",-1,returns,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('returns', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
GeneratorExp,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
GeneratorExp,3,13,3,expr,False,No,No,list(comprehension),list[comprehension],list[ast.comprehension],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
GeneratorExp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
GeneratorExp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
GeneratorExp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
GeneratorExp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Global,3,13,3,stmt,False,No,No,list(identifier),list[str],list[str],No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,names,_field,-1,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
Global,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Global,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Global,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Global,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Gt,3,13,3,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Gt')",-1,No,No,-1,No,No,No,No
GtE,3,13,3,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GtE')",-1,No,No,-1,No,No,No,No
If,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
If,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
If,3,13,3,stmt,False,No,orElse,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
If,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
If,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
If,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
If,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
IfExp,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,13,3,expr,False,No,orElse,expr,expr,expr,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,orelse,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('orelse', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
IfExp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
IfExp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
IfExp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Import,3,13,3,stmt,False,No,No,list(alias),list[alias],list[ast.alias],No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,names,_field,-1,list_alias,list[ast.alias],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias')))"
Import,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Import,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Import,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Import,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,13,3,stmt,False,No,No,identifier | None,str | None,str | None,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,module,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('module', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,13,3,stmt,False,No,list_alias,list(alias),list[alias],list[ast.alias],No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,names,_field,-1,list_alias,list[ast.alias],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias')))"
ImportFrom,3,13,3,stmt,False,No,No,int | None,int,int | None,No,False,0,True,int,0,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,level,_field,-1,int,int,ast.Name('int'),"ast.arg('level', ast.Name('int'))"
ImportFrom,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ImportFrom,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ImportFrom,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
In,3,13,3,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'In')",-1,No,No,-1,No,No,No,No
Index,3,13,3,slice,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Index')",-1,No,No,-1,No,No,No,No
Interactive,3,13,3,mod,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Interactive')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Invert,3,13,3,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Invert')",-1,No,No,-1,No,No,No,No
Is,3,13,3,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Is')",-1,No,No,-1,No,No,No,No
IsNot,3,13,3,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IsNot')",-1,No,No,-1,No,No,No,No
JoinedStr,3,13,3,expr,False,No,No,list(expr),list[expr],list[ast.expr],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
JoinedStr,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
JoinedStr,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
JoinedStr,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
JoinedStr,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
LShift,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'LShift')",-1,No,No,-1,No,No,No,No
Lambda,3,13,3,expr,False,No,No,arguments,arguments,arguments,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
Lambda,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Lambda,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Lambda,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Lambda,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Lambda,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
List,3,13,3,expr,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
List,3,13,3,expr,False,No,context,expr_context,expr_context,expr_context,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
List,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
List,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
List,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
List,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ListComp,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
ListComp,3,13,3,expr,False,No,No,list(comprehension),list[comprehension],list[ast.comprehension],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
ListComp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ListComp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ListComp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ListComp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Load,3,13,3,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Load')",-1,No,No,-1,No,No,No,No
Lt,3,13,3,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lt')",-1,No,No,-1,No,No,No,No
LtE,3,13,3,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'LtE')",-1,No,No,-1,No,No,No,No
MatMult,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatMult')",-1,No,No,-1,No,No,No,No
Match,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,subject,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('subject', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Match,3,13,3,stmt,False,No,No,list(match_case),list[match_case],list[ast.match_case],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,cases,_field,10,list_match_case,list[ast.match_case],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='match_case'))","ast.arg('cases', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='match_case')))"
Match,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Match,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Match,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Match,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,13,3,pattern,False,No,No,pattern | None,_Pattern | None,ast.pattern | None,_Pattern,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,pattern,_field,10,patternOrNone,ast.pattern | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='pattern'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('pattern', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='pattern'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,13,3,pattern,False,No,No,identifier | None,str | None,str | None,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,name,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchAs,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchAs,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchClass,3,13,3,pattern,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,cls,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('cls', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
MatchClass,3,13,3,pattern,False,No,No,list(pattern),list[pattern],list[ast.pattern],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchClass,3,13,3,pattern,False,No,No,list(identifier),list[str],list[str],No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,kwd_attrs,_field,10,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('kwd_attrs', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
MatchClass,3,13,3,pattern,False,No,No,list(pattern),list[pattern],list[ast.pattern],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,kwd_patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('kwd_patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchClass,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchClass,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchClass,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchClass,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,13,3,pattern,False,No,No,list(expr),list[expr],list[ast.expr],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,keys,_field,10,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('keys', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
MatchMapping,3,13,3,pattern,False,No,No,list(pattern),list[pattern],list[ast.pattern],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchMapping,3,13,3,pattern,False,No,No,identifier | None,str | None,str | None,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,rest,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('rest', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchMapping,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchMapping,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchOr,3,13,3,pattern,False,No,No,list(pattern),list[pattern],list[ast.pattern],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchOr,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchOr,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchOr,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchOr,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSequence,3,13,3,pattern,False,No,No,list(pattern),list[pattern],list[ast.pattern],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchSequence,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchSequence,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchSequence,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSequence,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,13,3,pattern,False,No,No,constant,"Literal[True, False] | None",object,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,value,_field,10,boolOrNone,bool | None,"ast.BinOp(left=ast.Name('bool'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Name('bool'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchSingleton,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchSingleton,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,13,3,pattern,False,No,No,identifier | None,str | None,str | None,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,name,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchStar,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchStar,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchValue,3,13,3,pattern,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,value,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
MatchValue,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchValue,3,13,3,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchValue,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchValue,3,13,3,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Mod,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Mod')",-1,No,No,-1,No,No,No,No
Module,3,13,3,mod,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Module')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Module,3,13,3,mod,False,No,No,list(type_ignore),list[TypeIgnore],list[ast.type_ignore],No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Module')",-1,type_ignores,_field,-1,list_TypeIgnore,list[ast.TypeIgnore],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='TypeIgnore'))","ast.arg('type_ignores', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='TypeIgnore')))"
Mult,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Mult')",-1,No,No,-1,No,No,No,No
Name,3,13,3,expr,False,No,No,identifier,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,id,_field,-1,str,str,ast.Name('str'),"ast.arg('id', ast.Name('str'))"
Name,3,13,3,expr,False,No,context,expr_context,expr_context,expr_context,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Name,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Name,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Name,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Name,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NameConstant,3,13,3,Constant,True,No,No,No,No,object,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,value,_field,-1,Any,No,No,No
NameConstant,3,13,3,Constant,True,No,No,No,No,str | None,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,kind,_field,-1,strOrNone,No,No,No
NameConstant,3,13,3,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
NameConstant,3,13,3,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
NameConstant,3,13,3,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NameConstant,3,13,3,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NamedExpr,3,13,3,expr,False,No,No,expr,Name,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,target,_field,-1,Name,ast.Name,"ast.Attribute(value=ast.Name('ast'), attr='Name')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='Name'))"
NamedExpr,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
NamedExpr,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
NamedExpr,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
NamedExpr,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NamedExpr,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Nonlocal,3,13,3,stmt,False,No,No,list(identifier),list[str],list[str],No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,names,_field,-1,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
Nonlocal,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Nonlocal,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Nonlocal,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Nonlocal,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Not,3,13,3,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Not')",-1,No,No,-1,No,No,No,No
NotEq,3,13,3,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NotEq')",-1,No,No,-1,No,No,No,No
NotIn,3,13,3,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NotIn')",-1,No,No,-1,No,No,No,No
Num,3,13,3,Constant,True,No,No,No,No,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,n,_field,-1,intORfloatORcomplex,No,No,No
Num,3,13,3,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Num,3,13,3,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Num,3,13,3,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Num,3,13,3,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Or,3,13,3,boolop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Or')",-1,No,No,-1,No,No,No,No
Param,3,13,3,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Param')",-1,No,No,-1,No,No,No,No
ParamSpec,3,13,3,type_param,False,No,No,identifier,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,name,_field,12,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
ParamSpec,3,13,3,type_param,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,default_value,_field,13,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('default_value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ParamSpec,3,13,3,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,lineno,_attribute,12,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ParamSpec,3,13,3,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,col_offset,_attribute,12,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ParamSpec,3,13,3,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,end_lineno,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ParamSpec,3,13,3,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,end_col_offset,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pass,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Pass,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Pass,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pass,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pow,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Pow')",-1,No,No,-1,No,No,No,No
RShift,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'RShift')",-1,No,No,-1,No,No,No,No
Raise,3,13,3,stmt,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,exc,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('exc', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,13,3,stmt,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,cause,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('cause', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Raise,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Raise,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,13,3,stmt,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Return,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Return,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Set,3,13,3,expr,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Set,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Set,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Set,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Set,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
SetComp,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
SetComp,3,13,3,expr,False,No,No,list(comprehension),list[comprehension],list[ast.comprehension],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
SetComp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
SetComp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
SetComp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
SetComp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,13,3,expr,False,_Slice,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,lower,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('lower', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,13,3,expr,False,_Slice,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,upper,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('upper', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,13,3,expr,False,_Slice,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,step,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('step', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,13,3,expr,False,_Slice,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Slice,3,13,3,expr,False,_Slice,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Slice,3,13,3,expr,False,_Slice,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,13,3,expr,False,_Slice,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Starred,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Starred,3,13,3,expr,False,No,context,expr_context,expr_context,expr_context,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Starred,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Starred,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Starred,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Starred,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Store,3,13,3,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Store')",-1,No,No,-1,No,No,No,No
Str,3,13,3,Constant,True,No,No,No,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,s,_field,-1,str,str,ast.Name('str'),"ast.arg('s', ast.Name('str'))"
Str,3,13,3,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Str,3,13,3,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Str,3,13,3,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Str,3,13,3,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Sub,3,13,3,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Sub')",-1,No,No,-1,No,No,No,No
Subscript,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Subscript,3,13,3,expr,False,No,No,expr,_Slice,expr,_Slice,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,slice,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('slice', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Subscript,3,13,3,expr,False,No,context,expr_context,expr_context,expr_context,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Subscript,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Subscript,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Subscript,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Subscript,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Suite,3,13,3,mod,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Suite')",-1,No,No,-1,No,No,No,No
Try,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,13,3,stmt,False,No,No,list(excepthandler),list[ExceptHandler],list[ast.excepthandler],No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,handlers,_field,-1,list_ExceptHandler,list[ast.ExceptHandler],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler'))","ast.arg('handlers', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler')))"
Try,3,13,3,stmt,False,No,orElse,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,finalbody,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('finalbody', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Try,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Try,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Try,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TryStar,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,body,_field,11,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
TryStar,3,13,3,stmt,False,No,No,list(excepthandler),list[ExceptHandler],list[ast.excepthandler],No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,handlers,_field,11,list_ExceptHandler,list[ast.ExceptHandler],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler'))","ast.arg('handlers', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler')))"
TryStar,3,13,3,stmt,False,No,orElse,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,orelse,_field,11,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
TryStar,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,finalbody,_field,11,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('finalbody', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
TryStar,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,lineno,_attribute,11,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TryStar,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,col_offset,_attribute,11,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
TryStar,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,end_lineno,_attribute,11,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TryStar,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,end_col_offset,_attribute,11,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Tuple,3,13,3,expr,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Tuple,3,13,3,expr,False,No,context,expr_context,expr_context,expr_context,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Tuple,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Tuple,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Tuple,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Tuple,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeAlias,3,13,3,stmt,False,No,No,expr,Name,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,name,_field,12,Name,ast.Name,"ast.Attribute(value=ast.Name('ast'), attr='Name')","ast.arg('name', ast.Attribute(value=ast.Name('ast'), attr='Name'))"
TypeAlias,3,13,3,stmt,False,No,No,list(type_param),list[type_param],list[ast.type_param],No,True,ast.List(),True,type_params,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,type_params,_field,12,list_type_param,list[ast.type_param],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param'))","ast.arg('type_params', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param')))"
TypeAlias,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,value,_field,12,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
TypeAlias,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,lineno,_attribute,12,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeAlias,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,col_offset,_attribute,12,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
TypeAlias,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,end_lineno,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeAlias,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,end_col_offset,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeIgnore,3,13,3,type_ignore,False,No,No,int,int,int,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeIgnore')",-1,lineno,_field,-1,int,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeIgnore,3,13,3,type_ignore,False,No,No,string,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeIgnore')",-1,tag,_field,-1,str,str,ast.Name('str'),"ast.arg('tag', ast.Name('str'))"
TypeVar,3,13,3,type_param,False,No,No,identifier,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,name,_field,12,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
TypeVar,3,13,3,type_param,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,bound,_field,12,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('bound', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeVar,3,13,3,type_param,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,default_value,_field,13,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('default_value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeVar,3,13,3,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,lineno,_attribute,12,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeVar,3,13,3,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,col_offset,_attribute,12,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
TypeVar,3,13,3,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,end_lineno,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeVar,3,13,3,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,end_col_offset,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeVarTuple,3,13,3,type_param,False,No,No,identifier,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,name,_field,12,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
TypeVarTuple,3,13,3,type_param,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,default_value,_field,13,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('default_value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeVarTuple,3,13,3,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,lineno,_attribute,12,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeVarTuple,3,13,3,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,col_offset,_attribute,12,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
TypeVarTuple,3,13,3,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,end_lineno,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeVarTuple,3,13,3,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,end_col_offset,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
UAdd,3,13,3,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UAdd')",-1,No,No,-1,No,No,No,No
USub,3,13,3,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'USub')",-1,No,No,-1,No,No,No,No
UnaryOp,3,13,3,expr,False,No,No,unaryop,unaryop,unaryop,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,op,_field,-1,unaryop,ast.unaryop,"ast.Attribute(value=ast.Name('ast'), attr='unaryop')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='unaryop'))"
UnaryOp,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,operand,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('operand', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
UnaryOp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
UnaryOp,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
UnaryOp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
UnaryOp,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
While,3,13,3,stmt,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
While,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
While,3,13,3,stmt,False,No,orElse,list(stmt),list[stmt],list[ast.stmt],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
While,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
While,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
While,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
While,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,13,3,stmt,False,No,No,list(withitem),list[withitem],list[ast.withitem],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,items,_field,-1,list_withitem,list[ast.withitem],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem'))","ast.arg('items', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem')))"
With,3,13,3,stmt,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
With,3,13,3,stmt,False,No,No,string | None,str | None,str | None,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
With,3,13,3,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
With,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,13,3,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,13,3,expr,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Yield,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Yield,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
YieldFrom,3,13,3,expr,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
YieldFrom,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
YieldFrom,3,13,3,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
YieldFrom,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
YieldFrom,3,13,3,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,13,3,AST,False,No,No,identifier,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
alias,3,13,3,AST,False,No,asName,identifier | None,str | None,str | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,asname,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('asname', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
alias,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
alias,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,13,3,AST,False,No,No,identifier,str,str,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,arg,_field,-1,str,str,ast.Name('str'),"ast.arg('arg', ast.Name('str'))"
arg,3,13,3,AST,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,annotation,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('annotation', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,13,3,AST,False,No,No,string | None,str | None,str | None,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
arg,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
arg,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,13,3,AST,False,No,No,list(arg),list[arg],list[ast.arg],No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,posonlyargs,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('posonlyargs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,13,3,AST,False,No,No,list(arg),list[arg],list[ast.arg],No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,args,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('args', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,13,3,AST,False,No,No,arg | None,arg | None,ast.arg | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,vararg,_field,-1,argOrNone,ast.arg | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('vararg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,13,3,AST,False,No,No,list(arg),list[arg],list[ast.arg],No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kwonlyargs,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('kwonlyargs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,13,3,AST,False,No,No,list(expr),list[expr | None],list[ast.expr],No,True,ast.List(ast.Constant(None)),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kw_defaults,_field,-1,list_exprOrNone,list[ast.expr | None],"ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))","ast.arg('kw_defaults', ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))))"
arguments,3,13,3,AST,False,No,No,arg | None,arg | None,ast.arg | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kwarg,_field,-1,argOrNone,ast.arg | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('kwarg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,13,3,AST,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,defaults,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('defaults', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
boolop,3,13,3,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'boolop')",-1,No,No,-1,No,No,No,No
cmpop,3,13,3,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'cmpop')",-1,No,No,-1,No,No,No,No
comprehension,3,13,3,AST,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
comprehension,3,13,3,AST,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
comprehension,3,13,3,AST,False,No,No,list(expr),list[expr],list[ast.expr],No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,ifs,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('ifs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
comprehension,3,13,3,AST,False,No,No,int,int,int,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,is_async,_field,-1,int,int,ast.Name('int'),"ast.arg('is_async', ast.Name('int'))"
excepthandler,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
excepthandler,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
excepthandler,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
excepthandler,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
expr,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
expr,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr_context,3,13,3,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'expr_context')",-1,No,No,-1,No,No,No,No
keyword,3,13,3,AST,False,No,No,identifier | None,str | None,str | None,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,arg,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('arg', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
keyword,3,13,3,AST,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
keyword,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
keyword,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
keyword,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
keyword,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
match_case,3,13,3,AST,False,No,No,pattern,_Pattern,pattern,_Pattern,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,pattern,_field,10,pattern,ast.pattern,"ast.Attribute(value=ast.Name('ast'), attr='pattern')","ast.arg('pattern', ast.Attribute(value=ast.Name('ast'), attr='pattern'))"
match_case,3,13,3,AST,False,No,No,expr | None,expr | None,ast.expr | None,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,guard,_field,10,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('guard', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
match_case,3,13,3,AST,False,No,No,list(stmt),list[stmt],list[ast.stmt],No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,body,_field,10,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
mod,3,13,3,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'mod')",-1,No,No,-1,No,No,No,No
operator,3,13,3,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'operator')",-1,No,No,-1,No,No,No,No
pattern,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
pattern,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
pattern,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
pattern,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
slice,3,13,3,AST,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'slice')",-1,No,No,-1,No,No,No,No
stmt,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
stmt,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
stmt,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
stmt,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
type_ignore,3,13,3,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'type_ignore')",-1,No,No,-1,No,No,No,No
type_param,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'type_param')",12,lineno,_attribute,12,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
type_param,3,13,3,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'type_param')",12,col_offset,_attribute,12,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
type_param,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'type_param')",12,end_lineno,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
type_param,3,13,3,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'type_param')",12,end_col_offset,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
unaryop,3,13,3,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'unaryop')",-1,No,No,-1,No,No,No,No
withitem,3,13,3,AST,False,No,No,expr,expr,expr,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'withitem')",-1,context_expr,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('context_expr', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
withitem,3,13,3,AST,False,No,No,expr | None,expr | None,ast.expr | None,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'withitem')",-1,optional_vars,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('optional_vars', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AST,3,9,13,object,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AST')",-1,No,No,-1,No,No,No,No
Add,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Add')",-1,No,No,-1,No,No,No,No
And,3,9,13,boolop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'And')",-1,No,No,-1,No,No,No,No
AnnAssign,3,9,13,stmt,False,No,No,expr,Name | Attribute | Subscript,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,target,_field,-1,NameOrAttributeOrSubscript,ast.Name | ast.Attribute | ast.Subscript,"ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript'))","ast.arg('target', ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript')))"
AnnAssign,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,annotation,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('annotation', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AnnAssign,3,9,13,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AnnAssign,3,9,13,stmt,False,No,No,int,int,No,No,False,"ast.Call(ast.Name('int'), args=[ast.Call(ast.Name('isinstance'), args=[ast.Name('target'), ast.Attribute(ast.Name('ast'), attr='Name')])])",True,int,"ast.Call(ast.Name('int'), args=[ast.Call(ast.Name('isinstance'), args=[ast.Name('target'), ast.Attribute(ast.Name('ast'), attr='Name')])])","ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,simple,_field,-1,int,int,ast.Name('int'),"ast.arg('simple', ast.Name('int'))"
AnnAssign,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AnnAssign,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AnnAssign,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AnnAssign,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Assert,3,9,13,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,msg,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('msg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Assert,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Assert,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,9,13,stmt,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,targets,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('targets', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Assign,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Assign,3,9,13,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Assign,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Assign,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AsyncFor,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AsyncFor,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFor,3,9,13,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFor,3,9,13,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncFor,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncFor,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,9,13,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
AsyncFunctionDef,3,9,13,stmt,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
AsyncFunctionDef,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFunctionDef,3,9,13,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
AsyncFunctionDef,3,9,13,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,returns,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('returns', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,9,13,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncFunctionDef,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncFunctionDef,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,9,13,stmt,False,No,No,list(withitem),list[withitem],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,items,_field,-1,list_withitem,list[ast.withitem],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem'))","ast.arg('items', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem')))"
AsyncWith,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncWith,3,9,13,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncWith,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncWith,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Attribute,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Attribute,3,9,13,expr,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,attr,_field,-1,str,str,ast.Name('str'),"ast.arg('attr', ast.Name('str'))"
Attribute,3,9,13,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Attribute,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Attribute,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Attribute,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Attribute,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugAssign,3,9,13,stmt,False,No,No,expr,Name | Attribute | Subscript,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,target,_field,-1,NameOrAttributeOrSubscript,ast.Name | ast.Attribute | ast.Subscript,"ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript'))","ast.arg('target', ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript')))"
AugAssign,3,9,13,stmt,False,No,No,operator,operator,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,op,_field,-1,operator,ast.operator,"ast.Attribute(value=ast.Name('ast'), attr='operator')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='operator'))"
AugAssign,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AugAssign,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AugAssign,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AugAssign,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugAssign,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugLoad,3,9,13,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugLoad')",-1,No,No,-1,No,No,No,No
AugStore,3,9,13,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugStore')",-1,No,No,-1,No,No,No,No
Await,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Await,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Await,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Await,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Await,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BinOp,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,left,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('left', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
BinOp,3,9,13,expr,False,No,No,operator,operator,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,op,_field,-1,operator,ast.operator,"ast.Attribute(value=ast.Name('ast'), attr='operator')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='operator'))"
BinOp,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,right,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('right', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
BinOp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
BinOp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
BinOp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BinOp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BitAnd,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitAnd')",-1,No,No,-1,No,No,No,No
BitOr,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitOr')",-1,No,No,-1,No,No,No,No
BitXor,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitXor')",-1,No,No,-1,No,No,No,No
BoolOp,3,9,13,expr,False,No,No,boolop,boolop,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,op,_field,-1,boolop,ast.boolop,"ast.Attribute(value=ast.Name('ast'), attr='boolop')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='boolop'))"
BoolOp,3,9,13,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
BoolOp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
BoolOp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
BoolOp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BoolOp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Break,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Break,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Break,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Break,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Bytes,3,9,13,Constant,True,No,No,No,bytes,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,s,_field,-1,bytes,bytes,ast.Name('bytes'),"ast.arg('s', ast.Name('bytes'))"
Bytes,3,9,13,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Bytes,3,9,13,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Bytes,3,9,13,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Bytes,3,9,13,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Call,3,9,13,expr,False,No,callee,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,func,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('func', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Call,3,9,13,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,args,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('args', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Call,3,9,13,expr,False,No,list_keyword,list(keyword),list[keyword],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,keywords,_field,-1,list_keyword,list[ast.keyword],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword'))","ast.arg('keywords', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword')))"
Call,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Call,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Call,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Call,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ClassDef,3,9,13,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
ClassDef,3,9,13,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,bases,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('bases', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
ClassDef,3,9,13,stmt,False,No,list_keyword,list(keyword),list[keyword],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,keywords,_field,-1,list_keyword,list[ast.keyword],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword'))","ast.arg('keywords', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword')))"
ClassDef,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
ClassDef,3,9,13,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
ClassDef,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ClassDef,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ClassDef,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ClassDef,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Compare,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,left,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('left', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Compare,3,9,13,expr,False,No,No,list(cmpop),list[cmpop],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,ops,_field,-1,list_cmpop,list[ast.cmpop],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='cmpop'))","ast.arg('ops', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='cmpop')))"
Compare,3,9,13,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,comparators,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('comparators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Compare,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Compare,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Compare,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Compare,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,9,13,expr,False,No,No,constant,Any,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,value,_field,-1,Any,Any,ast.Name('Any'),"ast.arg('value', ast.Name('Any'))"
Constant,3,9,13,expr,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,kind,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('kind', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Constant,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Constant,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Continue,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Continue,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Continue,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Continue,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Del,3,9,13,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Del')",-1,No,No,-1,No,No,No,No
Delete,3,9,13,stmt,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,targets,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('targets', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Delete,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Delete,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Delete,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Delete,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Dict,3,9,13,expr,False,No,No,list(expr),list[expr | None],No,No,True,ast.List(ast.Constant(None)),False,No,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,keys,_field,-1,list_exprOrNone,list[ast.expr | None],"ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))","ast.arg('keys', ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))))"
Dict,3,9,13,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Dict,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Dict,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Dict,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Dict,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
DictComp,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,key,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('key', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
DictComp,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
DictComp,3,9,13,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
DictComp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
DictComp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
DictComp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
DictComp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Div,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Div')",-1,No,No,-1,No,No,No,No
Ellipsis,3,9,13,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Ellipsis,3,9,13,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Ellipsis,3,9,13,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Ellipsis,3,9,13,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Eq,3,9,13,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Eq')",-1,No,No,-1,No,No,No,No
ExceptHandler,3,9,13,excepthandler,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,type,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,9,13,excepthandler,False,No,No,identifier | None,str | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,name,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,9,13,excepthandler,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
ExceptHandler,3,9,13,excepthandler,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ExceptHandler,3,9,13,excepthandler,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ExceptHandler,3,9,13,excepthandler,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,9,13,excepthandler,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expr,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Expr,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Expr,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Expr,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expr,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expression,3,9,13,mod,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Expression')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
ExtSlice,3,9,13,slice,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ExtSlice')",-1,No,No,-1,No,No,No,No
FloorDiv,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FloorDiv')",-1,No,No,-1,No,No,No,No
For,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
For,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
For,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
For,3,9,13,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
For,3,9,13,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
For,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
For,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
For,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
For,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
FormattedValue,3,9,13,expr,False,No,No,int | None,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,conversion,_field,-1,int,int,ast.Name('int'),"ast.arg('conversion', ast.Name('int'))"
FormattedValue,3,9,13,expr,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,format_spec,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('format_spec', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
FormattedValue,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
FormattedValue,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,9,13,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
FunctionDef,3,9,13,stmt,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
FunctionDef,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
FunctionDef,3,9,13,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
FunctionDef,3,9,13,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,returns,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('returns', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,9,13,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
FunctionDef,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
FunctionDef,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionType,3,9,13,mod,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionType')",-1,argtypes,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('argtypes', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
FunctionType,3,9,13,mod,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionType')",-1,returns,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('returns', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
GeneratorExp,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
GeneratorExp,3,9,13,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
GeneratorExp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
GeneratorExp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
GeneratorExp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
GeneratorExp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Global,3,9,13,stmt,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,names,_field,-1,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
Global,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Global,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Global,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Global,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Gt,3,9,13,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Gt')",-1,No,No,-1,No,No,No,No
GtE,3,9,13,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GtE')",-1,No,No,-1,No,No,No,No
If,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
If,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
If,3,9,13,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
If,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
If,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
If,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
If,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
IfExp,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,9,13,expr,False,No,orElse,expr,expr,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,orelse,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('orelse', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
IfExp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
IfExp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
IfExp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Import,3,9,13,stmt,False,No,No,list(alias),list[alias],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,names,_field,-1,list_alias,list[ast.alias],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias')))"
Import,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Import,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Import,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Import,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,9,13,stmt,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,module,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('module', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,9,13,stmt,False,No,list_alias,list(alias),list[alias],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,names,_field,-1,list_alias,list[ast.alias],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias')))"
ImportFrom,3,9,13,stmt,False,No,No,int | None,int,No,No,False,0,True,int,0,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,level,_field,-1,int,int,ast.Name('int'),"ast.arg('level', ast.Name('int'))"
ImportFrom,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ImportFrom,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ImportFrom,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
In,3,9,13,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'In')",-1,No,No,-1,No,No,No,No
Index,3,9,13,slice,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Index')",-1,No,No,-1,No,No,No,No
Interactive,3,9,13,mod,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Interactive')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Invert,3,9,13,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Invert')",-1,No,No,-1,No,No,No,No
Is,3,9,13,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Is')",-1,No,No,-1,No,No,No,No
IsNot,3,9,13,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IsNot')",-1,No,No,-1,No,No,No,No
JoinedStr,3,9,13,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
JoinedStr,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
JoinedStr,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
JoinedStr,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
JoinedStr,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
LShift,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'LShift')",-1,No,No,-1,No,No,No,No
Lambda,3,9,13,expr,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
Lambda,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Lambda,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Lambda,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Lambda,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Lambda,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
List,3,9,13,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
List,3,9,13,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
List,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
List,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
List,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
List,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ListComp,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
ListComp,3,9,13,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
ListComp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ListComp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ListComp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ListComp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Load,3,9,13,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Load')",-1,No,No,-1,No,No,No,No
Lt,3,9,13,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lt')",-1,No,No,-1,No,No,No,No
LtE,3,9,13,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'LtE')",-1,No,No,-1,No,No,No,No
MatMult,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatMult')",-1,No,No,-1,No,No,No,No
Mod,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Mod')",-1,No,No,-1,No,No,No,No
Module,3,9,13,mod,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Module')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Module,3,9,13,mod,False,No,No,list(type_ignore),list[TypeIgnore],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Module')",-1,type_ignores,_field,-1,list_TypeIgnore,list[ast.TypeIgnore],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='TypeIgnore'))","ast.arg('type_ignores', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='TypeIgnore')))"
Mult,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Mult')",-1,No,No,-1,No,No,No,No
Name,3,9,13,expr,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,id,_field,-1,str,str,ast.Name('str'),"ast.arg('id', ast.Name('str'))"
Name,3,9,13,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Name,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Name,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Name,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Name,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NameConstant,3,9,13,Constant,True,No,No,No,No,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,value,_field,-1,Any,No,No,No
NameConstant,3,9,13,Constant,True,No,No,No,No,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,kind,_field,-1,strOrNone,No,No,No
NameConstant,3,9,13,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
NameConstant,3,9,13,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
NameConstant,3,9,13,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NameConstant,3,9,13,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NamedExpr,3,9,13,expr,False,No,No,expr,Name,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,target,_field,-1,Name,ast.Name,"ast.Attribute(value=ast.Name('ast'), attr='Name')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='Name'))"
NamedExpr,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
NamedExpr,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
NamedExpr,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
NamedExpr,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NamedExpr,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Nonlocal,3,9,13,stmt,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,names,_field,-1,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
Nonlocal,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Nonlocal,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Nonlocal,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Nonlocal,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Not,3,9,13,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Not')",-1,No,No,-1,No,No,No,No
NotEq,3,9,13,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NotEq')",-1,No,No,-1,No,No,No,No
NotIn,3,9,13,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NotIn')",-1,No,No,-1,No,No,No,No
Num,3,9,13,Constant,True,No,No,No,No,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,n,_field,-1,intORfloatORcomplex,No,No,No
Num,3,9,13,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Num,3,9,13,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Num,3,9,13,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Num,3,9,13,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Or,3,9,13,boolop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Or')",-1,No,No,-1,No,No,No,No
Param,3,9,13,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Param')",-1,No,No,-1,No,No,No,No
Pass,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Pass,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Pass,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pass,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pow,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Pow')",-1,No,No,-1,No,No,No,No
RShift,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'RShift')",-1,No,No,-1,No,No,No,No
Raise,3,9,13,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,exc,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('exc', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,9,13,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,cause,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('cause', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Raise,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Raise,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,9,13,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Return,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Return,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Set,3,9,13,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Set,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Set,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Set,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Set,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
SetComp,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
SetComp,3,9,13,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
SetComp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
SetComp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
SetComp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
SetComp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,9,13,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,lower,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('lower', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,9,13,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,upper,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('upper', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,9,13,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,step,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('step', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,9,13,expr,False,_Slice,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Slice,3,9,13,expr,False,_Slice,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Slice,3,9,13,expr,False,_Slice,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,9,13,expr,False,_Slice,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Starred,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Starred,3,9,13,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Starred,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Starred,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Starred,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Starred,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Store,3,9,13,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Store')",-1,No,No,-1,No,No,No,No
Str,3,9,13,Constant,True,No,No,No,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,s,_field,-1,str,str,ast.Name('str'),"ast.arg('s', ast.Name('str'))"
Str,3,9,13,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Str,3,9,13,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Str,3,9,13,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Str,3,9,13,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Sub,3,9,13,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Sub')",-1,No,No,-1,No,No,No,No
Subscript,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Subscript,3,9,13,expr,False,No,No,expr,_Slice,No,_Slice,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,slice,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('slice', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Subscript,3,9,13,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Subscript,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Subscript,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Subscript,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Subscript,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Suite,3,9,13,mod,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Suite')",-1,No,No,-1,No,No,No,No
Try,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,9,13,stmt,False,No,No,list(excepthandler),list[ExceptHandler],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,handlers,_field,-1,list_ExceptHandler,list[ast.ExceptHandler],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler'))","ast.arg('handlers', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler')))"
Try,3,9,13,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,finalbody,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('finalbody', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Try,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Try,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Try,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Tuple,3,9,13,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Tuple,3,9,13,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Tuple,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Tuple,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Tuple,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Tuple,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeIgnore,3,9,13,type_ignore,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeIgnore')",-1,lineno,_field,-1,int,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeIgnore,3,9,13,type_ignore,False,No,No,string,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeIgnore')",-1,tag,_field,-1,str,str,ast.Name('str'),"ast.arg('tag', ast.Name('str'))"
UAdd,3,9,13,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UAdd')",-1,No,No,-1,No,No,No,No
USub,3,9,13,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'USub')",-1,No,No,-1,No,No,No,No
UnaryOp,3,9,13,expr,False,No,No,unaryop,unaryop,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,op,_field,-1,unaryop,ast.unaryop,"ast.Attribute(value=ast.Name('ast'), attr='unaryop')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='unaryop'))"
UnaryOp,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,operand,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('operand', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
UnaryOp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
UnaryOp,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
UnaryOp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
UnaryOp,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
While,3,9,13,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
While,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
While,3,9,13,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
While,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
While,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
While,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
While,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,9,13,stmt,False,No,No,list(withitem),list[withitem],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,items,_field,-1,list_withitem,list[ast.withitem],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem'))","ast.arg('items', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem')))"
With,3,9,13,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
With,3,9,13,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
With,3,9,13,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
With,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,9,13,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,9,13,expr,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Yield,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Yield,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
YieldFrom,3,9,13,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
YieldFrom,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
YieldFrom,3,9,13,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
YieldFrom,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
YieldFrom,3,9,13,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,9,13,AST,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
alias,3,9,13,AST,False,No,asName,identifier | None,str | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,asname,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('asname', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,9,13,AST,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,arg,_field,-1,str,str,ast.Name('str'),"ast.arg('arg', ast.Name('str'))"
arg,3,9,13,AST,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,annotation,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('annotation', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,9,13,AST,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,9,13,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
arg,3,9,13,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
arg,3,9,13,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,9,13,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,9,13,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,posonlyargs,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('posonlyargs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,9,13,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,args,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('args', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,9,13,AST,False,No,No,arg | None,arg | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,vararg,_field,-1,argOrNone,ast.arg | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('vararg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,9,13,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kwonlyargs,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('kwonlyargs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,9,13,AST,False,No,No,list(expr),list[expr | None],No,No,True,ast.List(ast.Constant(None)),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kw_defaults,_field,-1,list_exprOrNone,list[ast.expr | None],"ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))","ast.arg('kw_defaults', ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))))"
arguments,3,9,13,AST,False,No,No,arg | None,arg | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kwarg,_field,-1,argOrNone,ast.arg | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('kwarg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,9,13,AST,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,defaults,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('defaults', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
boolop,3,9,13,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'boolop')",-1,No,No,-1,No,No,No,No
cmpop,3,9,13,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'cmpop')",-1,No,No,-1,No,No,No,No
comprehension,3,9,13,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
comprehension,3,9,13,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
comprehension,3,9,13,AST,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,ifs,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('ifs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
comprehension,3,9,13,AST,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,is_async,_field,-1,int,int,ast.Name('int'),"ast.arg('is_async', ast.Name('int'))"
excepthandler,3,9,13,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
excepthandler,3,9,13,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
excepthandler,3,9,13,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
excepthandler,3,9,13,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr,3,9,13,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
expr,3,9,13,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
expr,3,9,13,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr,3,9,13,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr_context,3,9,13,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'expr_context')",-1,No,No,-1,No,No,No,No
keyword,3,9,13,AST,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,arg,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('arg', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
keyword,3,9,13,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
keyword,3,9,13,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
keyword,3,9,13,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
keyword,3,9,13,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
keyword,3,9,13,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
mod,3,9,13,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'mod')",-1,No,No,-1,No,No,No,No
operator,3,9,13,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'operator')",-1,No,No,-1,No,No,No,No
slice,3,9,13,AST,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'slice')",-1,No,No,-1,No,No,No,No
stmt,3,9,13,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
stmt,3,9,13,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
stmt,3,9,13,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
stmt,3,9,13,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
type_ignore,3,9,13,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'type_ignore')",-1,No,No,-1,No,No,No,No
unaryop,3,9,13,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'unaryop')",-1,No,No,-1,No,No,No,No
withitem,3,9,13,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'withitem')",-1,context_expr,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('context_expr', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
withitem,3,9,13,AST,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'withitem')",-1,optional_vars,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('optional_vars', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AST,3,10,11,object,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AST')",-1,No,No,-1,No,No,No,No
Add,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Add')",-1,No,No,-1,No,No,No,No
And,3,10,11,boolop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'And')",-1,No,No,-1,No,No,No,No
AnnAssign,3,10,11,stmt,False,No,No,expr,Name | Attribute | Subscript,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,target,_field,-1,NameOrAttributeOrSubscript,ast.Name | ast.Attribute | ast.Subscript,"ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript'))","ast.arg('target', ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript')))"
AnnAssign,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,annotation,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('annotation', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AnnAssign,3,10,11,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AnnAssign,3,10,11,stmt,False,No,No,int,int,No,No,False,"ast.Call(ast.Name('int'), args=[ast.Call(ast.Name('isinstance'), args=[ast.Name('target'), ast.Attribute(ast.Name('ast'), attr='Name')])])",True,int,"ast.Call(ast.Name('int'), args=[ast.Call(ast.Name('isinstance'), args=[ast.Name('target'), ast.Attribute(ast.Name('ast'), attr='Name')])])","ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,simple,_field,-1,int,int,ast.Name('int'),"ast.arg('simple', ast.Name('int'))"
AnnAssign,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AnnAssign,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AnnAssign,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AnnAssign,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Assert,3,10,11,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,msg,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('msg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Assert,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Assert,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,10,11,stmt,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,targets,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('targets', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Assign,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Assign,3,10,11,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Assign,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Assign,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AsyncFor,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AsyncFor,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFor,3,10,11,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFor,3,10,11,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncFor,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncFor,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,10,11,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
AsyncFunctionDef,3,10,11,stmt,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
AsyncFunctionDef,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFunctionDef,3,10,11,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
AsyncFunctionDef,3,10,11,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,returns,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('returns', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,10,11,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncFunctionDef,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncFunctionDef,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,10,11,stmt,False,No,No,list(withitem),list[withitem],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,items,_field,-1,list_withitem,list[ast.withitem],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem'))","ast.arg('items', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem')))"
AsyncWith,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncWith,3,10,11,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncWith,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncWith,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Attribute,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Attribute,3,10,11,expr,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,attr,_field,-1,str,str,ast.Name('str'),"ast.arg('attr', ast.Name('str'))"
Attribute,3,10,11,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Attribute,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Attribute,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Attribute,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Attribute,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugAssign,3,10,11,stmt,False,No,No,expr,Name | Attribute | Subscript,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,target,_field,-1,NameOrAttributeOrSubscript,ast.Name | ast.Attribute | ast.Subscript,"ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript'))","ast.arg('target', ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript')))"
AugAssign,3,10,11,stmt,False,No,No,operator,operator,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,op,_field,-1,operator,ast.operator,"ast.Attribute(value=ast.Name('ast'), attr='operator')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='operator'))"
AugAssign,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AugAssign,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AugAssign,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AugAssign,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugAssign,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugLoad,3,10,11,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugLoad')",-1,No,No,-1,No,No,No,No
AugStore,3,10,11,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugStore')",-1,No,No,-1,No,No,No,No
Await,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Await,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Await,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Await,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Await,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BinOp,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,left,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('left', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
BinOp,3,10,11,expr,False,No,No,operator,operator,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,op,_field,-1,operator,ast.operator,"ast.Attribute(value=ast.Name('ast'), attr='operator')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='operator'))"
BinOp,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,right,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('right', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
BinOp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
BinOp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
BinOp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BinOp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BitAnd,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitAnd')",-1,No,No,-1,No,No,No,No
BitOr,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitOr')",-1,No,No,-1,No,No,No,No
BitXor,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitXor')",-1,No,No,-1,No,No,No,No
BoolOp,3,10,11,expr,False,No,No,boolop,boolop,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,op,_field,-1,boolop,ast.boolop,"ast.Attribute(value=ast.Name('ast'), attr='boolop')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='boolop'))"
BoolOp,3,10,11,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
BoolOp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
BoolOp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
BoolOp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BoolOp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Break,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Break,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Break,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Break,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Bytes,3,10,11,Constant,True,No,No,No,bytes,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,s,_field,-1,bytes,bytes,ast.Name('bytes'),"ast.arg('s', ast.Name('bytes'))"
Bytes,3,10,11,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Bytes,3,10,11,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Bytes,3,10,11,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Bytes,3,10,11,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Call,3,10,11,expr,False,No,callee,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,func,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('func', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Call,3,10,11,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,args,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('args', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Call,3,10,11,expr,False,No,list_keyword,list(keyword),list[keyword],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,keywords,_field,-1,list_keyword,list[ast.keyword],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword'))","ast.arg('keywords', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword')))"
Call,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Call,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Call,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Call,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ClassDef,3,10,11,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
ClassDef,3,10,11,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,bases,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('bases', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
ClassDef,3,10,11,stmt,False,No,list_keyword,list(keyword),list[keyword],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,keywords,_field,-1,list_keyword,list[ast.keyword],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword'))","ast.arg('keywords', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword')))"
ClassDef,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
ClassDef,3,10,11,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
ClassDef,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ClassDef,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ClassDef,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ClassDef,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Compare,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,left,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('left', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Compare,3,10,11,expr,False,No,No,list(cmpop),list[cmpop],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,ops,_field,-1,list_cmpop,list[ast.cmpop],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='cmpop'))","ast.arg('ops', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='cmpop')))"
Compare,3,10,11,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,comparators,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('comparators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Compare,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Compare,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Compare,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Compare,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,10,11,expr,False,No,No,constant,Any,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,value,_field,-1,Any,Any,ast.Name('Any'),"ast.arg('value', ast.Name('Any'))"
Constant,3,10,11,expr,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,kind,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('kind', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Constant,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Constant,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Continue,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Continue,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Continue,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Continue,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Del,3,10,11,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Del')",-1,No,No,-1,No,No,No,No
Delete,3,10,11,stmt,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,targets,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('targets', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Delete,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Delete,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Delete,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Delete,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Dict,3,10,11,expr,False,No,No,list(expr),list[expr | None],No,No,True,ast.List(ast.Constant(None)),False,No,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,keys,_field,-1,list_exprOrNone,list[ast.expr | None],"ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))","ast.arg('keys', ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))))"
Dict,3,10,11,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Dict,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Dict,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Dict,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Dict,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
DictComp,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,key,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('key', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
DictComp,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
DictComp,3,10,11,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
DictComp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
DictComp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
DictComp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
DictComp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Div,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Div')",-1,No,No,-1,No,No,No,No
Ellipsis,3,10,11,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Ellipsis,3,10,11,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Ellipsis,3,10,11,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Ellipsis,3,10,11,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Eq,3,10,11,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Eq')",-1,No,No,-1,No,No,No,No
ExceptHandler,3,10,11,excepthandler,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,type,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,10,11,excepthandler,False,No,No,identifier | None,str | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,name,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,10,11,excepthandler,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
ExceptHandler,3,10,11,excepthandler,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ExceptHandler,3,10,11,excepthandler,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ExceptHandler,3,10,11,excepthandler,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,10,11,excepthandler,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expr,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Expr,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Expr,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Expr,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expr,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expression,3,10,11,mod,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Expression')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
ExtSlice,3,10,11,slice,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ExtSlice')",-1,No,No,-1,No,No,No,No
FloorDiv,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FloorDiv')",-1,No,No,-1,No,No,No,No
For,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
For,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
For,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
For,3,10,11,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
For,3,10,11,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
For,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
For,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
For,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
For,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
FormattedValue,3,10,11,expr,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,conversion,_field,-1,int,int,ast.Name('int'),"ast.arg('conversion', ast.Name('int'))"
FormattedValue,3,10,11,expr,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,format_spec,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('format_spec', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
FormattedValue,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
FormattedValue,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,10,11,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
FunctionDef,3,10,11,stmt,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
FunctionDef,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
FunctionDef,3,10,11,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
FunctionDef,3,10,11,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,returns,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('returns', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,10,11,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
FunctionDef,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
FunctionDef,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionType,3,10,11,mod,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionType')",-1,argtypes,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('argtypes', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
FunctionType,3,10,11,mod,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionType')",-1,returns,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('returns', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
GeneratorExp,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
GeneratorExp,3,10,11,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
GeneratorExp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
GeneratorExp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
GeneratorExp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
GeneratorExp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Global,3,10,11,stmt,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,names,_field,-1,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
Global,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Global,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Global,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Global,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Gt,3,10,11,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Gt')",-1,No,No,-1,No,No,No,No
GtE,3,10,11,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GtE')",-1,No,No,-1,No,No,No,No
If,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
If,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
If,3,10,11,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
If,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
If,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
If,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
If,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
IfExp,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,10,11,expr,False,No,orElse,expr,expr,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,orelse,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('orelse', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
IfExp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
IfExp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
IfExp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Import,3,10,11,stmt,False,No,No,list(alias),list[alias],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,names,_field,-1,list_alias,list[ast.alias],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias')))"
Import,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Import,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Import,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Import,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,10,11,stmt,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,module,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('module', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,10,11,stmt,False,No,list_alias,list(alias),list[alias],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,names,_field,-1,list_alias,list[ast.alias],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias')))"
ImportFrom,3,10,11,stmt,False,No,No,int | None,int,No,No,False,0,True,int,0,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,level,_field,-1,int,int,ast.Name('int'),"ast.arg('level', ast.Name('int'))"
ImportFrom,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ImportFrom,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ImportFrom,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
In,3,10,11,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'In')",-1,No,No,-1,No,No,No,No
Index,3,10,11,slice,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Index')",-1,No,No,-1,No,No,No,No
Interactive,3,10,11,mod,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Interactive')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Invert,3,10,11,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Invert')",-1,No,No,-1,No,No,No,No
Is,3,10,11,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Is')",-1,No,No,-1,No,No,No,No
IsNot,3,10,11,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IsNot')",-1,No,No,-1,No,No,No,No
JoinedStr,3,10,11,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
JoinedStr,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
JoinedStr,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
JoinedStr,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
JoinedStr,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
LShift,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'LShift')",-1,No,No,-1,No,No,No,No
Lambda,3,10,11,expr,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
Lambda,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Lambda,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Lambda,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Lambda,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Lambda,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
List,3,10,11,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
List,3,10,11,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
List,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
List,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
List,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
List,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ListComp,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
ListComp,3,10,11,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
ListComp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ListComp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ListComp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ListComp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Load,3,10,11,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Load')",-1,No,No,-1,No,No,No,No
Lt,3,10,11,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lt')",-1,No,No,-1,No,No,No,No
LtE,3,10,11,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'LtE')",-1,No,No,-1,No,No,No,No
MatMult,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatMult')",-1,No,No,-1,No,No,No,No
Match,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,subject,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('subject', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Match,3,10,11,stmt,False,No,No,list(match_case),list[match_case],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,cases,_field,10,list_match_case,list[ast.match_case],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='match_case'))","ast.arg('cases', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='match_case')))"
Match,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Match,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Match,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Match,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,10,11,pattern,False,No,No,pattern | None,_Pattern | None,No,_Pattern,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,pattern,_field,10,patternOrNone,ast.pattern | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='pattern'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('pattern', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='pattern'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,10,11,pattern,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,name,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchAs,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchAs,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchClass,3,10,11,pattern,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,cls,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('cls', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
MatchClass,3,10,11,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchClass,3,10,11,pattern,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,kwd_attrs,_field,10,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('kwd_attrs', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
MatchClass,3,10,11,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,kwd_patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('kwd_patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchClass,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchClass,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchClass,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchClass,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,10,11,pattern,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,keys,_field,10,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('keys', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
MatchMapping,3,10,11,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchMapping,3,10,11,pattern,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,rest,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('rest', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchMapping,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchMapping,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchOr,3,10,11,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchOr,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchOr,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchOr,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchOr,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSequence,3,10,11,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchSequence,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchSequence,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchSequence,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSequence,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,10,11,pattern,False,No,No,constant,"Literal[True, False] | None",No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,value,_field,10,boolOrNone,bool | None,"ast.BinOp(left=ast.Name('bool'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Name('bool'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchSingleton,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchSingleton,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,10,11,pattern,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,name,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchStar,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchStar,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchValue,3,10,11,pattern,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,value,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
MatchValue,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchValue,3,10,11,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchValue,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchValue,3,10,11,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Mod,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Mod')",-1,No,No,-1,No,No,No,No
Module,3,10,11,mod,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Module')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Module,3,10,11,mod,False,No,No,list(type_ignore),list[TypeIgnore],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Module')",-1,type_ignores,_field,-1,list_TypeIgnore,list[ast.TypeIgnore],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='TypeIgnore'))","ast.arg('type_ignores', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='TypeIgnore')))"
Mult,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Mult')",-1,No,No,-1,No,No,No,No
Name,3,10,11,expr,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,id,_field,-1,str,str,ast.Name('str'),"ast.arg('id', ast.Name('str'))"
Name,3,10,11,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Name,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Name,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Name,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Name,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NameConstant,3,10,11,Constant,True,No,No,No,No,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,value,_field,-1,Any,No,No,No
NameConstant,3,10,11,Constant,True,No,No,No,No,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,kind,_field,-1,strOrNone,No,No,No
NameConstant,3,10,11,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
NameConstant,3,10,11,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
NameConstant,3,10,11,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NameConstant,3,10,11,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NamedExpr,3,10,11,expr,False,No,No,expr,Name,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,target,_field,-1,Name,ast.Name,"ast.Attribute(value=ast.Name('ast'), attr='Name')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='Name'))"
NamedExpr,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
NamedExpr,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
NamedExpr,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
NamedExpr,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NamedExpr,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Nonlocal,3,10,11,stmt,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,names,_field,-1,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
Nonlocal,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Nonlocal,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Nonlocal,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Nonlocal,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Not,3,10,11,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Not')",-1,No,No,-1,No,No,No,No
NotEq,3,10,11,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NotEq')",-1,No,No,-1,No,No,No,No
NotIn,3,10,11,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NotIn')",-1,No,No,-1,No,No,No,No
Num,3,10,11,Constant,True,No,No,No,No,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,n,_field,-1,intORfloatORcomplex,No,No,No
Num,3,10,11,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Num,3,10,11,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Num,3,10,11,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Num,3,10,11,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Or,3,10,11,boolop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Or')",-1,No,No,-1,No,No,No,No
Param,3,10,11,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Param')",-1,No,No,-1,No,No,No,No
Pass,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Pass,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Pass,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pass,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pow,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Pow')",-1,No,No,-1,No,No,No,No
RShift,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'RShift')",-1,No,No,-1,No,No,No,No
Raise,3,10,11,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,exc,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('exc', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,10,11,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,cause,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('cause', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Raise,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Raise,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,10,11,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Return,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Return,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Set,3,10,11,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Set,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Set,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Set,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Set,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
SetComp,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
SetComp,3,10,11,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
SetComp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
SetComp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
SetComp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
SetComp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,10,11,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,lower,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('lower', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,10,11,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,upper,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('upper', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,10,11,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,step,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('step', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,10,11,expr,False,_Slice,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Slice,3,10,11,expr,False,_Slice,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Slice,3,10,11,expr,False,_Slice,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,10,11,expr,False,_Slice,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Starred,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Starred,3,10,11,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Starred,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Starred,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Starred,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Starred,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Store,3,10,11,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Store')",-1,No,No,-1,No,No,No,No
Str,3,10,11,Constant,True,No,No,No,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,s,_field,-1,str,str,ast.Name('str'),"ast.arg('s', ast.Name('str'))"
Str,3,10,11,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Str,3,10,11,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Str,3,10,11,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Str,3,10,11,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Sub,3,10,11,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Sub')",-1,No,No,-1,No,No,No,No
Subscript,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Subscript,3,10,11,expr,False,No,No,expr,_Slice,No,_Slice,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,slice,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('slice', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Subscript,3,10,11,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Subscript,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Subscript,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Subscript,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Subscript,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Suite,3,10,11,mod,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Suite')",-1,No,No,-1,No,No,No,No
Try,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,10,11,stmt,False,No,No,list(excepthandler),list[ExceptHandler],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,handlers,_field,-1,list_ExceptHandler,list[ast.ExceptHandler],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler'))","ast.arg('handlers', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler')))"
Try,3,10,11,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,finalbody,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('finalbody', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Try,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Try,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Try,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Tuple,3,10,11,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Tuple,3,10,11,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Tuple,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Tuple,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Tuple,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Tuple,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeIgnore,3,10,11,type_ignore,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeIgnore')",-1,lineno,_field,-1,int,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeIgnore,3,10,11,type_ignore,False,No,No,string,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeIgnore')",-1,tag,_field,-1,str,str,ast.Name('str'),"ast.arg('tag', ast.Name('str'))"
UAdd,3,10,11,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UAdd')",-1,No,No,-1,No,No,No,No
USub,3,10,11,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'USub')",-1,No,No,-1,No,No,No,No
UnaryOp,3,10,11,expr,False,No,No,unaryop,unaryop,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,op,_field,-1,unaryop,ast.unaryop,"ast.Attribute(value=ast.Name('ast'), attr='unaryop')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='unaryop'))"
UnaryOp,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,operand,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('operand', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
UnaryOp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
UnaryOp,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
UnaryOp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
UnaryOp,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
While,3,10,11,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
While,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
While,3,10,11,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
While,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
While,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
While,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
While,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,10,11,stmt,False,No,No,list(withitem),list[withitem],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,items,_field,-1,list_withitem,list[ast.withitem],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem'))","ast.arg('items', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem')))"
With,3,10,11,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
With,3,10,11,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
With,3,10,11,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
With,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,10,11,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,10,11,expr,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Yield,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Yield,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
YieldFrom,3,10,11,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
YieldFrom,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
YieldFrom,3,10,11,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
YieldFrom,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
YieldFrom,3,10,11,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,10,11,AST,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
alias,3,10,11,AST,False,No,asName,identifier | None,str | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,asname,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('asname', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
alias,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
alias,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,10,11,AST,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,arg,_field,-1,str,str,ast.Name('str'),"ast.arg('arg', ast.Name('str'))"
arg,3,10,11,AST,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,annotation,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('annotation', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,10,11,AST,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
arg,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
arg,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,10,11,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,posonlyargs,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('posonlyargs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,10,11,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,args,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('args', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,10,11,AST,False,No,No,arg | None,arg | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,vararg,_field,-1,argOrNone,ast.arg | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('vararg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,10,11,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kwonlyargs,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('kwonlyargs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,10,11,AST,False,No,No,list(expr),list[expr | None],No,No,True,ast.List(ast.Constant(None)),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kw_defaults,_field,-1,list_exprOrNone,list[ast.expr | None],"ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))","ast.arg('kw_defaults', ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))))"
arguments,3,10,11,AST,False,No,No,arg | None,arg | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kwarg,_field,-1,argOrNone,ast.arg | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('kwarg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,10,11,AST,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,defaults,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('defaults', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
boolop,3,10,11,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'boolop')",-1,No,No,-1,No,No,No,No
cmpop,3,10,11,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'cmpop')",-1,No,No,-1,No,No,No,No
comprehension,3,10,11,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
comprehension,3,10,11,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
comprehension,3,10,11,AST,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,ifs,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('ifs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
comprehension,3,10,11,AST,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,is_async,_field,-1,int,int,ast.Name('int'),"ast.arg('is_async', ast.Name('int'))"
excepthandler,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
excepthandler,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
excepthandler,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
excepthandler,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
expr,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
expr,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr_context,3,10,11,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'expr_context')",-1,No,No,-1,No,No,No,No
keyword,3,10,11,AST,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,arg,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('arg', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
keyword,3,10,11,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
keyword,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
keyword,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
keyword,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
keyword,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
match_case,3,10,11,AST,False,No,No,pattern,_Pattern,No,_Pattern,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,pattern,_field,10,pattern,ast.pattern,"ast.Attribute(value=ast.Name('ast'), attr='pattern')","ast.arg('pattern', ast.Attribute(value=ast.Name('ast'), attr='pattern'))"
match_case,3,10,11,AST,False,No,No,expr | None,expr | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,guard,_field,10,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('guard', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
match_case,3,10,11,AST,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,body,_field,10,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
mod,3,10,11,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'mod')",-1,No,No,-1,No,No,No,No
operator,3,10,11,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'operator')",-1,No,No,-1,No,No,No,No
pattern,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
pattern,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
pattern,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
pattern,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
slice,3,10,11,AST,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'slice')",-1,No,No,-1,No,No,No,No
stmt,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
stmt,3,10,11,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
stmt,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
stmt,3,10,11,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
type_ignore,3,10,11,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'type_ignore')",-1,No,No,-1,No,No,No,No
unaryop,3,10,11,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'unaryop')",-1,No,No,-1,No,No,No,No
withitem,3,10,11,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'withitem')",-1,context_expr,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('context_expr', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
withitem,3,10,11,AST,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'withitem')",-1,optional_vars,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('optional_vars', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AST,3,11,9,object,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AST')",-1,No,No,-1,No,No,No,No
Add,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Add')",-1,No,No,-1,No,No,No,No
And,3,11,9,boolop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'And')",-1,No,No,-1,No,No,No,No
AnnAssign,3,11,9,stmt,False,No,No,expr,Name | Attribute | Subscript,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,target,_field,-1,NameOrAttributeOrSubscript,ast.Name | ast.Attribute | ast.Subscript,"ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript'))","ast.arg('target', ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript')))"
AnnAssign,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,annotation,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('annotation', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AnnAssign,3,11,9,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AnnAssign,3,11,9,stmt,False,No,No,int,int,No,No,False,"ast.Call(ast.Name('int'), args=[ast.Call(ast.Name('isinstance'), args=[ast.Name('target'), ast.Attribute(ast.Name('ast'), attr='Name')])])",True,int,"ast.Call(ast.Name('int'), args=[ast.Call(ast.Name('isinstance'), args=[ast.Name('target'), ast.Attribute(ast.Name('ast'), attr='Name')])])","ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,simple,_field,-1,int,int,ast.Name('int'),"ast.arg('simple', ast.Name('int'))"
AnnAssign,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AnnAssign,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AnnAssign,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AnnAssign,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Assert,3,11,9,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,msg,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('msg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Assert,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Assert,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,11,9,stmt,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,targets,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('targets', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Assign,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Assign,3,11,9,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Assign,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Assign,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AsyncFor,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AsyncFor,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFor,3,11,9,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFor,3,11,9,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncFor,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncFor,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,11,9,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
AsyncFunctionDef,3,11,9,stmt,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
AsyncFunctionDef,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFunctionDef,3,11,9,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
AsyncFunctionDef,3,11,9,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,returns,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('returns', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,11,9,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncFunctionDef,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncFunctionDef,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,11,9,stmt,False,No,No,list(withitem),list[withitem],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,items,_field,-1,list_withitem,list[ast.withitem],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem'))","ast.arg('items', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem')))"
AsyncWith,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncWith,3,11,9,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncWith,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncWith,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Attribute,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Attribute,3,11,9,expr,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,attr,_field,-1,str,str,ast.Name('str'),"ast.arg('attr', ast.Name('str'))"
Attribute,3,11,9,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Attribute,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Attribute,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Attribute,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Attribute,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugAssign,3,11,9,stmt,False,No,No,expr,Name | Attribute | Subscript,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,target,_field,-1,NameOrAttributeOrSubscript,ast.Name | ast.Attribute | ast.Subscript,"ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript'))","ast.arg('target', ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript')))"
AugAssign,3,11,9,stmt,False,No,No,operator,operator,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,op,_field,-1,operator,ast.operator,"ast.Attribute(value=ast.Name('ast'), attr='operator')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='operator'))"
AugAssign,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AugAssign,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AugAssign,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AugAssign,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugAssign,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugLoad,3,11,9,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugLoad')",-1,No,No,-1,No,No,No,No
AugStore,3,11,9,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugStore')",-1,No,No,-1,No,No,No,No
Await,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Await,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Await,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Await,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Await,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BinOp,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,left,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('left', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
BinOp,3,11,9,expr,False,No,No,operator,operator,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,op,_field,-1,operator,ast.operator,"ast.Attribute(value=ast.Name('ast'), attr='operator')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='operator'))"
BinOp,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,right,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('right', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
BinOp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
BinOp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
BinOp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BinOp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BitAnd,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitAnd')",-1,No,No,-1,No,No,No,No
BitOr,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitOr')",-1,No,No,-1,No,No,No,No
BitXor,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitXor')",-1,No,No,-1,No,No,No,No
BoolOp,3,11,9,expr,False,No,No,boolop,boolop,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,op,_field,-1,boolop,ast.boolop,"ast.Attribute(value=ast.Name('ast'), attr='boolop')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='boolop'))"
BoolOp,3,11,9,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
BoolOp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
BoolOp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
BoolOp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BoolOp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Break,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Break,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Break,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Break,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Bytes,3,11,9,Constant,True,No,No,No,bytes,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,s,_field,-1,bytes,bytes,ast.Name('bytes'),"ast.arg('s', ast.Name('bytes'))"
Bytes,3,11,9,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Bytes,3,11,9,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Bytes,3,11,9,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Bytes,3,11,9,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Call,3,11,9,expr,False,No,callee,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,func,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('func', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Call,3,11,9,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,args,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('args', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Call,3,11,9,expr,False,No,list_keyword,list(keyword),list[keyword],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,keywords,_field,-1,list_keyword,list[ast.keyword],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword'))","ast.arg('keywords', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword')))"
Call,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Call,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Call,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Call,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ClassDef,3,11,9,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
ClassDef,3,11,9,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,bases,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('bases', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
ClassDef,3,11,9,stmt,False,No,list_keyword,list(keyword),list[keyword],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,keywords,_field,-1,list_keyword,list[ast.keyword],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword'))","ast.arg('keywords', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword')))"
ClassDef,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
ClassDef,3,11,9,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
ClassDef,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ClassDef,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ClassDef,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ClassDef,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Compare,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,left,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('left', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Compare,3,11,9,expr,False,No,No,list(cmpop),list[cmpop],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,ops,_field,-1,list_cmpop,list[ast.cmpop],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='cmpop'))","ast.arg('ops', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='cmpop')))"
Compare,3,11,9,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,comparators,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('comparators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Compare,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Compare,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Compare,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Compare,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,11,9,expr,False,No,No,constant,Any,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,value,_field,-1,Any,Any,ast.Name('Any'),"ast.arg('value', ast.Name('Any'))"
Constant,3,11,9,expr,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,kind,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('kind', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Constant,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Constant,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Continue,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Continue,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Continue,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Continue,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Del,3,11,9,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Del')",-1,No,No,-1,No,No,No,No
Delete,3,11,9,stmt,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,targets,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('targets', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Delete,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Delete,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Delete,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Delete,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Dict,3,11,9,expr,False,No,No,list(expr),list[expr | None],No,No,True,ast.List(ast.Constant(None)),False,No,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,keys,_field,-1,list_exprOrNone,list[ast.expr | None],"ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))","ast.arg('keys', ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))))"
Dict,3,11,9,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Dict,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Dict,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Dict,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Dict,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
DictComp,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,key,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('key', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
DictComp,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
DictComp,3,11,9,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
DictComp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
DictComp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
DictComp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
DictComp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Div,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Div')",-1,No,No,-1,No,No,No,No
Ellipsis,3,11,9,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Ellipsis,3,11,9,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Ellipsis,3,11,9,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Ellipsis,3,11,9,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Eq,3,11,9,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Eq')",-1,No,No,-1,No,No,No,No
ExceptHandler,3,11,9,excepthandler,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,type,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,11,9,excepthandler,False,No,No,identifier | None,str | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,name,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,11,9,excepthandler,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
ExceptHandler,3,11,9,excepthandler,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ExceptHandler,3,11,9,excepthandler,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ExceptHandler,3,11,9,excepthandler,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,11,9,excepthandler,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expr,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Expr,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Expr,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Expr,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expr,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expression,3,11,9,mod,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Expression')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
ExtSlice,3,11,9,slice,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ExtSlice')",-1,No,No,-1,No,No,No,No
FloorDiv,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FloorDiv')",-1,No,No,-1,No,No,No,No
For,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
For,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
For,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
For,3,11,9,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
For,3,11,9,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
For,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
For,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
For,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
For,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
FormattedValue,3,11,9,expr,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,conversion,_field,-1,int,int,ast.Name('int'),"ast.arg('conversion', ast.Name('int'))"
FormattedValue,3,11,9,expr,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,format_spec,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('format_spec', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
FormattedValue,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
FormattedValue,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,11,9,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
FunctionDef,3,11,9,stmt,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
FunctionDef,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
FunctionDef,3,11,9,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
FunctionDef,3,11,9,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,returns,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('returns', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,11,9,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
FunctionDef,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
FunctionDef,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionType,3,11,9,mod,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionType')",-1,argtypes,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('argtypes', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
FunctionType,3,11,9,mod,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionType')",-1,returns,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('returns', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
GeneratorExp,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
GeneratorExp,3,11,9,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
GeneratorExp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
GeneratorExp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
GeneratorExp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
GeneratorExp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Global,3,11,9,stmt,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,names,_field,-1,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
Global,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Global,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Global,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Global,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Gt,3,11,9,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Gt')",-1,No,No,-1,No,No,No,No
GtE,3,11,9,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GtE')",-1,No,No,-1,No,No,No,No
If,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
If,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
If,3,11,9,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
If,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
If,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
If,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
If,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
IfExp,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,11,9,expr,False,No,orElse,expr,expr,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,orelse,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('orelse', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
IfExp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
IfExp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
IfExp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Import,3,11,9,stmt,False,No,No,list(alias),list[alias],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,names,_field,-1,list_alias,list[ast.alias],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias')))"
Import,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Import,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Import,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Import,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,11,9,stmt,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,module,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('module', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,11,9,stmt,False,No,list_alias,list(alias),list[alias],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,names,_field,-1,list_alias,list[ast.alias],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias')))"
ImportFrom,3,11,9,stmt,False,No,No,int | None,int,No,No,False,0,True,int,0,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,level,_field,-1,int,int,ast.Name('int'),"ast.arg('level', ast.Name('int'))"
ImportFrom,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ImportFrom,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ImportFrom,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
In,3,11,9,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'In')",-1,No,No,-1,No,No,No,No
Index,3,11,9,slice,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Index')",-1,No,No,-1,No,No,No,No
Interactive,3,11,9,mod,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Interactive')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Invert,3,11,9,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Invert')",-1,No,No,-1,No,No,No,No
Is,3,11,9,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Is')",-1,No,No,-1,No,No,No,No
IsNot,3,11,9,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IsNot')",-1,No,No,-1,No,No,No,No
JoinedStr,3,11,9,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
JoinedStr,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
JoinedStr,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
JoinedStr,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
JoinedStr,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
LShift,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'LShift')",-1,No,No,-1,No,No,No,No
Lambda,3,11,9,expr,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
Lambda,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Lambda,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Lambda,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Lambda,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Lambda,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
List,3,11,9,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
List,3,11,9,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
List,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
List,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
List,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
List,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ListComp,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
ListComp,3,11,9,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
ListComp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ListComp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ListComp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ListComp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Load,3,11,9,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Load')",-1,No,No,-1,No,No,No,No
Lt,3,11,9,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lt')",-1,No,No,-1,No,No,No,No
LtE,3,11,9,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'LtE')",-1,No,No,-1,No,No,No,No
MatMult,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatMult')",-1,No,No,-1,No,No,No,No
Match,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,subject,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('subject', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Match,3,11,9,stmt,False,No,No,list(match_case),list[match_case],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,cases,_field,10,list_match_case,list[ast.match_case],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='match_case'))","ast.arg('cases', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='match_case')))"
Match,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Match,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Match,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Match,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,11,9,pattern,False,No,No,pattern | None,_Pattern | None,No,_Pattern,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,pattern,_field,10,patternOrNone,ast.pattern | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='pattern'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('pattern', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='pattern'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,11,9,pattern,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,name,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchAs,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchAs,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchClass,3,11,9,pattern,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,cls,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('cls', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
MatchClass,3,11,9,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchClass,3,11,9,pattern,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,kwd_attrs,_field,10,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('kwd_attrs', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
MatchClass,3,11,9,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,kwd_patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('kwd_patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchClass,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchClass,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchClass,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchClass,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,11,9,pattern,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,keys,_field,10,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('keys', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
MatchMapping,3,11,9,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchMapping,3,11,9,pattern,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,rest,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('rest', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchMapping,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchMapping,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchOr,3,11,9,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchOr,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchOr,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchOr,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchOr,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSequence,3,11,9,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchSequence,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchSequence,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchSequence,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSequence,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,11,9,pattern,False,No,No,constant,"Literal[True, False] | None",No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,value,_field,10,boolOrNone,bool | None,"ast.BinOp(left=ast.Name('bool'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Name('bool'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchSingleton,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchSingleton,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,11,9,pattern,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,name,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchStar,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchStar,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchValue,3,11,9,pattern,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,value,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
MatchValue,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchValue,3,11,9,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchValue,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchValue,3,11,9,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Mod,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Mod')",-1,No,No,-1,No,No,No,No
Module,3,11,9,mod,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Module')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Module,3,11,9,mod,False,No,No,list(type_ignore),list[TypeIgnore],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Module')",-1,type_ignores,_field,-1,list_TypeIgnore,list[ast.TypeIgnore],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='TypeIgnore'))","ast.arg('type_ignores', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='TypeIgnore')))"
Mult,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Mult')",-1,No,No,-1,No,No,No,No
Name,3,11,9,expr,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,id,_field,-1,str,str,ast.Name('str'),"ast.arg('id', ast.Name('str'))"
Name,3,11,9,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Name,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Name,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Name,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Name,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NameConstant,3,11,9,Constant,True,No,No,No,No,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,value,_field,-1,Any,No,No,No
NameConstant,3,11,9,Constant,True,No,No,No,No,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,kind,_field,-1,strOrNone,No,No,No
NameConstant,3,11,9,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
NameConstant,3,11,9,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
NameConstant,3,11,9,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NameConstant,3,11,9,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NamedExpr,3,11,9,expr,False,No,No,expr,Name,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,target,_field,-1,Name,ast.Name,"ast.Attribute(value=ast.Name('ast'), attr='Name')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='Name'))"
NamedExpr,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
NamedExpr,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
NamedExpr,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
NamedExpr,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NamedExpr,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Nonlocal,3,11,9,stmt,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,names,_field,-1,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
Nonlocal,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Nonlocal,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Nonlocal,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Nonlocal,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Not,3,11,9,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Not')",-1,No,No,-1,No,No,No,No
NotEq,3,11,9,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NotEq')",-1,No,No,-1,No,No,No,No
NotIn,3,11,9,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NotIn')",-1,No,No,-1,No,No,No,No
Num,3,11,9,Constant,True,No,No,No,No,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,n,_field,-1,intORfloatORcomplex,No,No,No
Num,3,11,9,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Num,3,11,9,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Num,3,11,9,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Num,3,11,9,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Or,3,11,9,boolop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Or')",-1,No,No,-1,No,No,No,No
Param,3,11,9,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Param')",-1,No,No,-1,No,No,No,No
Pass,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Pass,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Pass,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pass,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pow,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Pow')",-1,No,No,-1,No,No,No,No
RShift,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'RShift')",-1,No,No,-1,No,No,No,No
Raise,3,11,9,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,exc,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('exc', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,11,9,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,cause,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('cause', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Raise,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Raise,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,11,9,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Return,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Return,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Set,3,11,9,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Set,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Set,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Set,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Set,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
SetComp,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
SetComp,3,11,9,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
SetComp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
SetComp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
SetComp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
SetComp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,11,9,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,lower,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('lower', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,11,9,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,upper,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('upper', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,11,9,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,step,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('step', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,11,9,expr,False,_Slice,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Slice,3,11,9,expr,False,_Slice,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Slice,3,11,9,expr,False,_Slice,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,11,9,expr,False,_Slice,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Starred,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Starred,3,11,9,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Starred,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Starred,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Starred,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Starred,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Store,3,11,9,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Store')",-1,No,No,-1,No,No,No,No
Str,3,11,9,Constant,True,No,No,No,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,s,_field,-1,str,str,ast.Name('str'),"ast.arg('s', ast.Name('str'))"
Str,3,11,9,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Str,3,11,9,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Str,3,11,9,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Str,3,11,9,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Sub,3,11,9,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Sub')",-1,No,No,-1,No,No,No,No
Subscript,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Subscript,3,11,9,expr,False,No,No,expr,_Slice,No,_Slice,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,slice,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('slice', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Subscript,3,11,9,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Subscript,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Subscript,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Subscript,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Subscript,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Suite,3,11,9,mod,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Suite')",-1,No,No,-1,No,No,No,No
Try,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,11,9,stmt,False,No,No,list(excepthandler),list[ExceptHandler],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,handlers,_field,-1,list_ExceptHandler,list[ast.ExceptHandler],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler'))","ast.arg('handlers', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler')))"
Try,3,11,9,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,finalbody,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('finalbody', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Try,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Try,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Try,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TryStar,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,body,_field,11,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
TryStar,3,11,9,stmt,False,No,No,list(excepthandler),list[ExceptHandler],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,handlers,_field,11,list_ExceptHandler,list[ast.ExceptHandler],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler'))","ast.arg('handlers', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler')))"
TryStar,3,11,9,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,orelse,_field,11,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
TryStar,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,finalbody,_field,11,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('finalbody', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
TryStar,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,lineno,_attribute,11,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TryStar,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,col_offset,_attribute,11,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
TryStar,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,end_lineno,_attribute,11,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TryStar,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,end_col_offset,_attribute,11,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Tuple,3,11,9,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Tuple,3,11,9,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Tuple,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Tuple,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Tuple,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Tuple,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeIgnore,3,11,9,type_ignore,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeIgnore')",-1,lineno,_field,-1,int,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeIgnore,3,11,9,type_ignore,False,No,No,string,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeIgnore')",-1,tag,_field,-1,str,str,ast.Name('str'),"ast.arg('tag', ast.Name('str'))"
UAdd,3,11,9,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UAdd')",-1,No,No,-1,No,No,No,No
USub,3,11,9,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'USub')",-1,No,No,-1,No,No,No,No
UnaryOp,3,11,9,expr,False,No,No,unaryop,unaryop,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,op,_field,-1,unaryop,ast.unaryop,"ast.Attribute(value=ast.Name('ast'), attr='unaryop')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='unaryop'))"
UnaryOp,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,operand,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('operand', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
UnaryOp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
UnaryOp,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
UnaryOp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
UnaryOp,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
While,3,11,9,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
While,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
While,3,11,9,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
While,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
While,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
While,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
While,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,11,9,stmt,False,No,No,list(withitem),list[withitem],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,items,_field,-1,list_withitem,list[ast.withitem],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem'))","ast.arg('items', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem')))"
With,3,11,9,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
With,3,11,9,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
With,3,11,9,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
With,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,11,9,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,11,9,expr,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Yield,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Yield,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
YieldFrom,3,11,9,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
YieldFrom,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
YieldFrom,3,11,9,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
YieldFrom,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
YieldFrom,3,11,9,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,11,9,AST,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
alias,3,11,9,AST,False,No,asName,identifier | None,str | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,asname,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('asname', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
alias,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
alias,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,11,9,AST,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,arg,_field,-1,str,str,ast.Name('str'),"ast.arg('arg', ast.Name('str'))"
arg,3,11,9,AST,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,annotation,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('annotation', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,11,9,AST,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
arg,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
arg,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,11,9,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,posonlyargs,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('posonlyargs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,11,9,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,args,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('args', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,11,9,AST,False,No,No,arg | None,arg | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,vararg,_field,-1,argOrNone,ast.arg | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('vararg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,11,9,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kwonlyargs,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('kwonlyargs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,11,9,AST,False,No,No,list(expr),list[expr | None],No,No,True,ast.List(ast.Constant(None)),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kw_defaults,_field,-1,list_exprOrNone,list[ast.expr | None],"ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))","ast.arg('kw_defaults', ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))))"
arguments,3,11,9,AST,False,No,No,arg | None,arg | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kwarg,_field,-1,argOrNone,ast.arg | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('kwarg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,11,9,AST,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,defaults,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('defaults', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
boolop,3,11,9,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'boolop')",-1,No,No,-1,No,No,No,No
cmpop,3,11,9,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'cmpop')",-1,No,No,-1,No,No,No,No
comprehension,3,11,9,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
comprehension,3,11,9,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
comprehension,3,11,9,AST,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,ifs,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('ifs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
comprehension,3,11,9,AST,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,is_async,_field,-1,int,int,ast.Name('int'),"ast.arg('is_async', ast.Name('int'))"
excepthandler,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
excepthandler,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
excepthandler,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
excepthandler,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
expr,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
expr,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr_context,3,11,9,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'expr_context')",-1,No,No,-1,No,No,No,No
keyword,3,11,9,AST,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,arg,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('arg', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
keyword,3,11,9,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
keyword,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
keyword,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
keyword,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
keyword,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
match_case,3,11,9,AST,False,No,No,pattern,_Pattern,No,_Pattern,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,pattern,_field,10,pattern,ast.pattern,"ast.Attribute(value=ast.Name('ast'), attr='pattern')","ast.arg('pattern', ast.Attribute(value=ast.Name('ast'), attr='pattern'))"
match_case,3,11,9,AST,False,No,No,expr | None,expr | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,guard,_field,10,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('guard', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
match_case,3,11,9,AST,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,body,_field,10,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
mod,3,11,9,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'mod')",-1,No,No,-1,No,No,No,No
operator,3,11,9,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'operator')",-1,No,No,-1,No,No,No,No
pattern,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
pattern,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
pattern,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
pattern,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
slice,3,11,9,AST,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'slice')",-1,No,No,-1,No,No,No,No
stmt,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
stmt,3,11,9,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
stmt,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
stmt,3,11,9,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
type_ignore,3,11,9,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'type_ignore')",-1,No,No,-1,No,No,No,No
unaryop,3,11,9,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'unaryop')",-1,No,No,-1,No,No,No,No
withitem,3,11,9,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'withitem')",-1,context_expr,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('context_expr', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
withitem,3,11,9,AST,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'withitem')",-1,optional_vars,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('optional_vars', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AST,3,12,10,object,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AST')",-1,No,No,-1,No,No,No,No
Add,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Add')",-1,No,No,-1,No,No,No,No
And,3,12,10,boolop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'And')",-1,No,No,-1,No,No,No,No
AnnAssign,3,12,10,stmt,False,No,No,expr,Name | Attribute | Subscript,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,target,_field,-1,NameOrAttributeOrSubscript,ast.Name | ast.Attribute | ast.Subscript,"ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript'))","ast.arg('target', ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript')))"
AnnAssign,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,annotation,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('annotation', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AnnAssign,3,12,10,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AnnAssign,3,12,10,stmt,False,No,No,int,int,No,No,False,"ast.Call(ast.Name('int'), args=[ast.Call(ast.Name('isinstance'), args=[ast.Name('target'), ast.Attribute(ast.Name('ast'), attr='Name')])])",True,int,"ast.Call(ast.Name('int'), args=[ast.Call(ast.Name('isinstance'), args=[ast.Name('target'), ast.Attribute(ast.Name('ast'), attr='Name')])])","ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,simple,_field,-1,int,int,ast.Name('int'),"ast.arg('simple', ast.Name('int'))"
AnnAssign,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AnnAssign,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AnnAssign,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AnnAssign,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AnnAssign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Assert,3,12,10,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,msg,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('msg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Assert,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Assert,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assert,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assert')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,12,10,stmt,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,targets,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('targets', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Assign,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Assign,3,12,10,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Assign,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Assign,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Assign,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Assign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AsyncFor,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AsyncFor,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFor,3,12,10,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFor,3,12,10,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncFor,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncFor,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFor,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFor')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,returns,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('returns', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,list(type_param),list[type_param],No,No,True,ast.List(),True,type_params,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,type_params,_field,12,list_type_param,list[ast.type_param],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param'))","ast.arg('type_params', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param')))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncFunctionDef,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncFunctionDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,12,10,stmt,False,No,No,list(withitem),list[withitem],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,items,_field,-1,list_withitem,list[ast.withitem],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem'))","ast.arg('items', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem')))"
AsyncWith,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
AsyncWith,3,12,10,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AsyncWith,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AsyncWith,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AsyncWith,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AsyncWith')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Attribute,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Attribute,3,12,10,expr,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,attr,_field,-1,str,str,ast.Name('str'),"ast.arg('attr', ast.Name('str'))"
Attribute,3,12,10,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Attribute,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Attribute,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Attribute,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Attribute,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Attribute')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugAssign,3,12,10,stmt,False,No,No,expr,Name | Attribute | Subscript,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,target,_field,-1,NameOrAttributeOrSubscript,ast.Name | ast.Attribute | ast.Subscript,"ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript'))","ast.arg('target', ast.BinOp(left=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='Name'), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Attribute')), op=ast.BitOr(), right=ast.Attribute(value=ast.Name('ast'), attr='Subscript')))"
AugAssign,3,12,10,stmt,False,No,No,operator,operator,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,op,_field,-1,operator,ast.operator,"ast.Attribute(value=ast.Name('ast'), attr='operator')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='operator'))"
AugAssign,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
AugAssign,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
AugAssign,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
AugAssign,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugAssign,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'AugAssign')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
AugLoad,3,12,10,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugLoad')",-1,No,No,-1,No,No,No,No
AugStore,3,12,10,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'AugStore')",-1,No,No,-1,No,No,No,No
Await,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Await,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Await,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Await,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Await,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Await')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BinOp,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,left,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('left', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
BinOp,3,12,10,expr,False,No,No,operator,operator,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,op,_field,-1,operator,ast.operator,"ast.Attribute(value=ast.Name('ast'), attr='operator')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='operator'))"
BinOp,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,right,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('right', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
BinOp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
BinOp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
BinOp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BinOp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BinOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BitAnd,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitAnd')",-1,No,No,-1,No,No,No,No
BitOr,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitOr')",-1,No,No,-1,No,No,No,No
BitXor,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BitXor')",-1,No,No,-1,No,No,No,No
BoolOp,3,12,10,expr,False,No,No,boolop,boolop,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,op,_field,-1,boolop,ast.boolop,"ast.Attribute(value=ast.Name('ast'), attr='boolop')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='boolop'))"
BoolOp,3,12,10,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
BoolOp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
BoolOp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
BoolOp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
BoolOp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'BoolOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Break,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Break,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Break,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Break,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Break')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Bytes,3,12,10,Constant,True,No,No,No,bytes,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,s,_field,-1,bytes,bytes,ast.Name('bytes'),"ast.arg('s', ast.Name('bytes'))"
Bytes,3,12,10,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Bytes,3,12,10,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Bytes,3,12,10,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Bytes,3,12,10,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Bytes')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Call,3,12,10,expr,False,No,callee,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,func,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('func', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Call,3,12,10,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,args,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('args', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Call,3,12,10,expr,False,No,list_keyword,list(keyword),list[keyword],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,keywords,_field,-1,list_keyword,list[ast.keyword],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword'))","ast.arg('keywords', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword')))"
Call,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Call,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Call,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Call,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Call')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ClassDef,3,12,10,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
ClassDef,3,12,10,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,bases,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('bases', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
ClassDef,3,12,10,stmt,False,No,list_keyword,list(keyword),list[keyword],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,keywords,_field,-1,list_keyword,list[ast.keyword],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword'))","ast.arg('keywords', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='keyword')))"
ClassDef,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
ClassDef,3,12,10,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
ClassDef,3,12,10,stmt,False,No,No,list(type_param),list[type_param],No,No,True,ast.List(),True,type_params,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,type_params,_field,12,list_type_param,list[ast.type_param],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param'))","ast.arg('type_params', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param')))"
ClassDef,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ClassDef,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ClassDef,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ClassDef,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ClassDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Compare,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,left,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('left', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Compare,3,12,10,expr,False,No,No,list(cmpop),list[cmpop],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,ops,_field,-1,list_cmpop,list[ast.cmpop],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='cmpop'))","ast.arg('ops', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='cmpop')))"
Compare,3,12,10,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,comparators,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('comparators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Compare,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Compare,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Compare,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Compare,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Compare')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,12,10,expr,False,No,No,constant,Any,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,value,_field,-1,Any,Any,ast.Name('Any'),"ast.arg('value', ast.Name('Any'))"
Constant,3,12,10,expr,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,kind,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('kind', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Constant,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Constant,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Constant,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Constant')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Continue,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Continue,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Continue,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Continue,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Continue')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Del,3,12,10,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Del')",-1,No,No,-1,No,No,No,No
Delete,3,12,10,stmt,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,targets,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('targets', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Delete,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Delete,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Delete,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Delete,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Delete')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Dict,3,12,10,expr,False,No,No,list(expr),list[expr | None],No,No,True,ast.List(ast.Constant(None)),False,No,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,keys,_field,-1,list_exprOrNone,list[ast.expr | None],"ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))","ast.arg('keys', ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))))"
Dict,3,12,10,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Dict,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Dict,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Dict,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Dict,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Dict')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
DictComp,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,key,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('key', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
DictComp,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
DictComp,3,12,10,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
DictComp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
DictComp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
DictComp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
DictComp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'DictComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Div,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Div')",-1,No,No,-1,No,No,No,No
Ellipsis,3,12,10,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Ellipsis,3,12,10,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Ellipsis,3,12,10,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Ellipsis,3,12,10,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Ellipsis')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Eq,3,12,10,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Eq')",-1,No,No,-1,No,No,No,No
ExceptHandler,3,12,10,excepthandler,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,type,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,12,10,excepthandler,False,No,No,identifier | None,str | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,name,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,12,10,excepthandler,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
ExceptHandler,3,12,10,excepthandler,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ExceptHandler,3,12,10,excepthandler,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ExceptHandler,3,12,10,excepthandler,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ExceptHandler,3,12,10,excepthandler,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ExceptHandler')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expr,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Expr,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Expr,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Expr,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expr,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Expr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Expression,3,12,10,mod,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Expression')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
ExtSlice,3,12,10,slice,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ExtSlice')",-1,No,No,-1,No,No,No,No
FloorDiv,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FloorDiv')",-1,No,No,-1,No,No,No,No
For,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
For,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
For,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
For,3,12,10,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
For,3,12,10,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
For,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
For,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
For,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
For,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'For')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
FormattedValue,3,12,10,expr,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,conversion,_field,-1,int,int,ast.Name('int'),"ast.arg('conversion', ast.Name('int'))"
FormattedValue,3,12,10,expr,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,format_spec,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('format_spec', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
FormattedValue,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
FormattedValue,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FormattedValue,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FormattedValue')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,12,10,stmt,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
FunctionDef,3,12,10,stmt,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
FunctionDef,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
FunctionDef,3,12,10,stmt,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,decorator_list,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('decorator_list', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
FunctionDef,3,12,10,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,returns,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('returns', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,12,10,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,12,10,stmt,False,No,No,list(type_param),list[type_param],No,No,True,ast.List(),True,type_params,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,type_params,_field,12,list_type_param,list[ast.type_param],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param'))","ast.arg('type_params', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param')))"
FunctionDef,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
FunctionDef,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
FunctionDef,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionDef,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'FunctionDef')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
FunctionType,3,12,10,mod,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionType')",-1,argtypes,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('argtypes', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
FunctionType,3,12,10,mod,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'FunctionType')",-1,returns,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('returns', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
GeneratorExp,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
GeneratorExp,3,12,10,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
GeneratorExp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
GeneratorExp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
GeneratorExp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
GeneratorExp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'GeneratorExp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Global,3,12,10,stmt,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,names,_field,-1,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
Global,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Global,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Global,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Global,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Global')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Gt,3,12,10,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Gt')",-1,No,No,-1,No,No,No,No
GtE,3,12,10,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'GtE')",-1,No,No,-1,No,No,No,No
If,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
If,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
If,3,12,10,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
If,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
If,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
If,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
If,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'If')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
IfExp,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,12,10,expr,False,No,orElse,expr,expr,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,orelse,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('orelse', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
IfExp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
IfExp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
IfExp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
IfExp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'IfExp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Import,3,12,10,stmt,False,No,No,list(alias),list[alias],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,names,_field,-1,list_alias,list[ast.alias],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias')))"
Import,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Import,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Import,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Import,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Import')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,12,10,stmt,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,module,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('module', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,12,10,stmt,False,No,list_alias,list(alias),list[alias],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,names,_field,-1,list_alias,list[ast.alias],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='alias')))"
ImportFrom,3,12,10,stmt,False,No,No,int | None,int,No,No,False,0,True,int,0,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,level,_field,-1,int,int,ast.Name('int'),"ast.arg('level', ast.Name('int'))"
ImportFrom,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ImportFrom,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ImportFrom,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ImportFrom,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ImportFrom')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
In,3,12,10,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'In')",-1,No,No,-1,No,No,No,No
Index,3,12,10,slice,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Index')",-1,No,No,-1,No,No,No,No
Interactive,3,12,10,mod,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Interactive')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Invert,3,12,10,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Invert')",-1,No,No,-1,No,No,No,No
Is,3,12,10,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Is')",-1,No,No,-1,No,No,No,No
IsNot,3,12,10,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'IsNot')",-1,No,No,-1,No,No,No,No
JoinedStr,3,12,10,expr,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,values,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('values', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
JoinedStr,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
JoinedStr,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
JoinedStr,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
JoinedStr,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'JoinedStr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
LShift,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'LShift')",-1,No,No,-1,No,No,No,No
Lambda,3,12,10,expr,False,No,No,arguments,arguments,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,args,_field,-1,arguments,ast.arguments,"ast.Attribute(value=ast.Name('ast'), attr='arguments')","ast.arg('args', ast.Attribute(value=ast.Name('ast'), attr='arguments'))"
Lambda,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,body,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('body', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Lambda,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Lambda,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Lambda,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Lambda,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Lambda')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
List,3,12,10,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
List,3,12,10,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
List,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
List,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
List,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
List,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'List')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ListComp,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
ListComp,3,12,10,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
ListComp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ListComp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ListComp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ListComp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ListComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Load,3,12,10,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Load')",-1,No,No,-1,No,No,No,No
Lt,3,12,10,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Lt')",-1,No,No,-1,No,No,No,No
LtE,3,12,10,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'LtE')",-1,No,No,-1,No,No,No,No
MatMult,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatMult')",-1,No,No,-1,No,No,No,No
Match,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,subject,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('subject', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Match,3,12,10,stmt,False,No,No,list(match_case),list[match_case],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,cases,_field,10,list_match_case,list[ast.match_case],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='match_case'))","ast.arg('cases', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='match_case')))"
Match,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Match,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Match,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Match,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Match')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,12,10,pattern,False,No,No,pattern | None,_Pattern | None,No,_Pattern,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,pattern,_field,10,patternOrNone,ast.pattern | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='pattern'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('pattern', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='pattern'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,12,10,pattern,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,name,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchAs,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchAs,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchAs,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchAs')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchClass,3,12,10,pattern,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,cls,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('cls', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
MatchClass,3,12,10,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchClass,3,12,10,pattern,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,kwd_attrs,_field,10,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('kwd_attrs', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
MatchClass,3,12,10,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,kwd_patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('kwd_patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchClass,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchClass,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchClass,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchClass,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchClass')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,12,10,pattern,False,No,No,list(expr),list[expr],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,keys,_field,10,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('keys', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
MatchMapping,3,12,10,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchMapping,3,12,10,pattern,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,rest,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('rest', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchMapping,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchMapping,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchMapping,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchMapping')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchOr,3,12,10,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchOr,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchOr,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchOr,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchOr,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchOr')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSequence,3,12,10,pattern,False,No,No,list(pattern),list[pattern],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,patterns,_field,10,list_pattern,list[ast.pattern],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern'))","ast.arg('patterns', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='pattern')))"
MatchSequence,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchSequence,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchSequence,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSequence,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSequence')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,12,10,pattern,False,No,No,constant,"Literal[True, False] | None",No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,value,_field,10,boolOrNone,bool | None,"ast.BinOp(left=ast.Name('bool'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Name('bool'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchSingleton,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchSingleton,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchSingleton,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchSingleton')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,12,10,pattern,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,name,_field,10,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('name', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchStar,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchStar,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchStar,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchStar')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchValue,3,12,10,pattern,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,value,_field,10,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
MatchValue,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
MatchValue,3,12,10,pattern,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
MatchValue,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
MatchValue,3,12,10,pattern,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'MatchValue')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Mod,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Mod')",-1,No,No,-1,No,No,No,No
Module,3,12,10,mod,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Module')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Module,3,12,10,mod,False,No,No,list(type_ignore),list[TypeIgnore],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Module')",-1,type_ignores,_field,-1,list_TypeIgnore,list[ast.TypeIgnore],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='TypeIgnore'))","ast.arg('type_ignores', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='TypeIgnore')))"
Mult,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Mult')",-1,No,No,-1,No,No,No,No
Name,3,12,10,expr,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,id,_field,-1,str,str,ast.Name('str'),"ast.arg('id', ast.Name('str'))"
Name,3,12,10,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Name,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Name,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Name,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Name,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Name')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NameConstant,3,12,10,Constant,True,No,No,No,No,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,value,_field,-1,Any,No,No,No
NameConstant,3,12,10,Constant,True,No,No,No,No,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,kind,_field,-1,strOrNone,No,No,No
NameConstant,3,12,10,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
NameConstant,3,12,10,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
NameConstant,3,12,10,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NameConstant,3,12,10,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NameConstant')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NamedExpr,3,12,10,expr,False,No,No,expr,Name,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,target,_field,-1,Name,ast.Name,"ast.Attribute(value=ast.Name('ast'), attr='Name')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='Name'))"
NamedExpr,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
NamedExpr,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
NamedExpr,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
NamedExpr,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
NamedExpr,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'NamedExpr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Nonlocal,3,12,10,stmt,False,No,No,list(identifier),list[str],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,names,_field,-1,list_str,list[str],"ast.Subscript(value=ast.Name('list'), slice=ast.Name('str'))","ast.arg('names', ast.Subscript(value=ast.Name('list'), slice=ast.Name('str')))"
Nonlocal,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Nonlocal,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Nonlocal,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Nonlocal,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Nonlocal')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Not,3,12,10,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Not')",-1,No,No,-1,No,No,No,No
NotEq,3,12,10,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NotEq')",-1,No,No,-1,No,No,No,No
NotIn,3,12,10,cmpop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'NotIn')",-1,No,No,-1,No,No,No,No
Num,3,12,10,Constant,True,No,No,No,No,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,n,_field,-1,intORfloatORcomplex,No,No,No
Num,3,12,10,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Num,3,12,10,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Num,3,12,10,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Num,3,12,10,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Num')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Or,3,12,10,boolop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Or')",-1,No,No,-1,No,No,No,No
Param,3,12,10,expr_context,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Param')",-1,No,No,-1,No,No,No,No
ParamSpec,3,12,10,type_param,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,name,_field,12,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
ParamSpec,3,12,10,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,lineno,_attribute,12,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
ParamSpec,3,12,10,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,col_offset,_attribute,12,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
ParamSpec,3,12,10,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,end_lineno,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
ParamSpec,3,12,10,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'ParamSpec')",12,end_col_offset,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pass,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Pass,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Pass,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pass,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Pass')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Pow,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Pow')",-1,No,No,-1,No,No,No,No
RShift,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'RShift')",-1,No,No,-1,No,No,No,No
Raise,3,12,10,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,exc,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('exc', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,12,10,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,cause,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('cause', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Raise,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Raise,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Raise,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Raise')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,12,10,stmt,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Return,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Return,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Return,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Return')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Set,3,12,10,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Set,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Set,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Set,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Set,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Set')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
SetComp,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,elt,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('elt', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
SetComp,3,12,10,expr,False,No,No,list(comprehension),list[comprehension],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,generators,_field,-1,list_comprehension,list[ast.comprehension],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension'))","ast.arg('generators', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='comprehension')))"
SetComp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
SetComp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
SetComp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
SetComp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'SetComp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,12,10,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,lower,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('lower', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,12,10,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,upper,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('upper', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,12,10,expr,False,_Slice,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,step,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('step', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,12,10,expr,False,_Slice,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Slice,3,12,10,expr,False,_Slice,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Slice,3,12,10,expr,False,_Slice,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Slice,3,12,10,expr,False,_Slice,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Slice')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Starred,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Starred,3,12,10,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Starred,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Starred,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Starred,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Starred,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Starred')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Store,3,12,10,expr_context,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Store')",-1,No,No,-1,No,No,No,No
Str,3,12,10,Constant,True,No,No,No,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,s,_field,-1,str,str,ast.Name('str'),"ast.arg('s', ast.Name('str'))"
Str,3,12,10,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Str,3,12,10,Constant,True,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Str,3,12,10,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Str,3,12,10,Constant,True,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Str')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Sub,3,12,10,operator,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Sub')",-1,No,No,-1,No,No,No,No
Subscript,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Subscript,3,12,10,expr,False,No,No,expr,_Slice,No,_Slice,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,slice,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('slice', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
Subscript,3,12,10,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Subscript,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Subscript,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Subscript,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Subscript,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Subscript')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Suite,3,12,10,mod,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Suite')",-1,No,No,-1,No,No,No,No
Try,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,12,10,stmt,False,No,No,list(excepthandler),list[ExceptHandler],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,handlers,_field,-1,list_ExceptHandler,list[ast.ExceptHandler],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler'))","ast.arg('handlers', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler')))"
Try,3,12,10,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,finalbody,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('finalbody', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
Try,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Try,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Try,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Try,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Try')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TryStar,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,body,_field,11,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
TryStar,3,12,10,stmt,False,No,No,list(excepthandler),list[ExceptHandler],No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,handlers,_field,11,list_ExceptHandler,list[ast.ExceptHandler],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler'))","ast.arg('handlers', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='ExceptHandler')))"
TryStar,3,12,10,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,orelse,_field,11,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
TryStar,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,finalbody,_field,11,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('finalbody', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
TryStar,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,lineno,_attribute,11,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TryStar,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,col_offset,_attribute,11,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
TryStar,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,end_lineno,_attribute,11,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TryStar,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TryStar')",11,end_col_offset,_attribute,11,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Tuple,3,12,10,expr,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,elts,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('elts', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
Tuple,3,12,10,expr,False,No,context,expr_context,expr_context,No,No,False,,False,No,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,ctx,_field,-1,expr_context,ast.expr_context,"ast.Attribute(value=ast.Name('ast'), attr='expr_context')","ast.arg('ctx', ast.Attribute(value=ast.Name('ast'), attr='expr_context'))"
Tuple,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Tuple,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Tuple,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Tuple,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Tuple')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeAlias,3,12,10,stmt,False,No,No,expr,Name,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,name,_field,12,Name,ast.Name,"ast.Attribute(value=ast.Name('ast'), attr='Name')","ast.arg('name', ast.Attribute(value=ast.Name('ast'), attr='Name'))"
TypeAlias,3,12,10,stmt,False,No,No,list(type_param),list[type_param],No,No,True,ast.List(),True,type_params,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,type_params,_field,12,list_type_param,list[ast.type_param],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param'))","ast.arg('type_params', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='type_param')))"
TypeAlias,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,value,_field,12,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
TypeAlias,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,lineno,_attribute,12,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeAlias,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,col_offset,_attribute,12,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
TypeAlias,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,end_lineno,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeAlias,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeAlias')",12,end_col_offset,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeIgnore,3,12,10,type_ignore,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeIgnore')",-1,lineno,_field,-1,int,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeIgnore,3,12,10,type_ignore,False,No,No,string,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeIgnore')",-1,tag,_field,-1,str,str,ast.Name('str'),"ast.arg('tag', ast.Name('str'))"
TypeVar,3,12,10,type_param,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,name,_field,12,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
TypeVar,3,12,10,type_param,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,bound,_field,12,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('bound', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeVar,3,12,10,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,lineno,_attribute,12,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeVar,3,12,10,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,col_offset,_attribute,12,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
TypeVar,3,12,10,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,end_lineno,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeVar,3,12,10,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVar')",12,end_col_offset,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeVarTuple,3,12,10,type_param,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,name,_field,12,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
TypeVarTuple,3,12,10,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,lineno,_attribute,12,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
TypeVarTuple,3,12,10,type_param,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,col_offset,_attribute,12,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
TypeVarTuple,3,12,10,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,end_lineno,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
TypeVarTuple,3,12,10,type_param,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'TypeVarTuple')",12,end_col_offset,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
UAdd,3,12,10,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UAdd')",-1,No,No,-1,No,No,No,No
USub,3,12,10,unaryop,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'USub')",-1,No,No,-1,No,No,No,No
UnaryOp,3,12,10,expr,False,No,No,unaryop,unaryop,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,op,_field,-1,unaryop,ast.unaryop,"ast.Attribute(value=ast.Name('ast'), attr='unaryop')","ast.arg('op', ast.Attribute(value=ast.Name('ast'), attr='unaryop'))"
UnaryOp,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,operand,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('operand', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
UnaryOp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
UnaryOp,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
UnaryOp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
UnaryOp,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'UnaryOp')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
While,3,12,10,stmt,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,test,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('test', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
While,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
While,3,12,10,stmt,False,No,orElse,list(stmt),list[stmt],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,orelse,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('orelse', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
While,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
While,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
While,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
While,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'While')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,12,10,stmt,False,No,No,list(withitem),list[withitem],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,items,_field,-1,list_withitem,list[ast.withitem],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem'))","ast.arg('items', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='withitem')))"
With,3,12,10,stmt,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,body,_field,-1,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
With,3,12,10,stmt,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
With,3,12,10,stmt,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
With,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
With,3,12,10,stmt,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'With')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,12,10,expr,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,value,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('value', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
Yield,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
Yield,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
Yield,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'Yield')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
YieldFrom,3,12,10,expr,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
YieldFrom,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
YieldFrom,3,12,10,expr,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
YieldFrom,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
YieldFrom,3,12,10,expr,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'YieldFrom')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,12,10,AST,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,name,_field,-1,str,str,ast.Name('str'),"ast.arg('name', ast.Name('str'))"
alias,3,12,10,AST,False,No,asName,identifier | None,str | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,asname,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('asname', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
alias,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
alias,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
alias,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'alias')",-1,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,12,10,AST,False,No,No,identifier,str,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,arg,_field,-1,str,str,ast.Name('str'),"ast.arg('arg', ast.Name('str'))"
arg,3,12,10,AST,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,annotation,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('annotation', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,12,10,AST,False,No,No,string | None,str | None,No,No,False,ast.Constant(None),True,str,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,type_comment,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('type_comment', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
arg,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
arg,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arg,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'arg')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,12,10,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,posonlyargs,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('posonlyargs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,12,10,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,args,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('args', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,12,10,AST,False,No,No,arg | None,arg | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,vararg,_field,-1,argOrNone,ast.arg | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('vararg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,12,10,AST,False,No,No,list(arg),list[arg],No,No,False,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kwonlyargs,_field,-1,list_arg,list[ast.arg],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg'))","ast.arg('kwonlyargs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='arg')))"
arguments,3,12,10,AST,False,No,No,list(expr),list[expr | None],No,No,True,ast.List(ast.Constant(None)),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kw_defaults,_field,-1,list_exprOrNone,list[ast.expr | None],"ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))","ast.arg('kw_defaults', ast.Subscript(value=ast.Name('list'), slice=ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))))"
arguments,3,12,10,AST,False,No,No,arg | None,arg | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,kwarg,_field,-1,argOrNone,ast.arg | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('kwarg', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='arg'), op=ast.BitOr(), right=ast.Constant(value=None)))"
arguments,3,12,10,AST,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'arguments')",-1,defaults,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('defaults', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
boolop,3,12,10,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'boolop')",-1,No,No,-1,No,No,No,No
cmpop,3,12,10,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'cmpop')",-1,No,No,-1,No,No,No,No
comprehension,3,12,10,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,target,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('target', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
comprehension,3,12,10,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,iter,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('iter', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
comprehension,3,12,10,AST,False,No,No,list(expr),list[expr],No,No,True,ast.List(),False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,ifs,_field,-1,list_expr,list[ast.expr],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr'))","ast.arg('ifs', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='expr')))"
comprehension,3,12,10,AST,False,No,No,int,int,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'comprehension')",-1,is_async,_field,-1,int,int,ast.Name('int'),"ast.arg('is_async', ast.Name('int'))"
excepthandler,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
excepthandler,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
excepthandler,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
excepthandler,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'excepthandler')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
expr,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
expr,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'expr')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
expr_context,3,12,10,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'expr_context')",-1,No,No,-1,No,No,No,No
keyword,3,12,10,AST,False,No,No,identifier | None,str | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,arg,_field,-1,strOrNone,str | None,"ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('arg', ast.BinOp(left=ast.Name('str'), op=ast.BitOr(), right=ast.Constant(value=None)))"
keyword,3,12,10,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,value,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('value', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
keyword,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
keyword,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
keyword,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
keyword,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'keyword')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
match_case,3,12,10,AST,False,No,No,pattern,_Pattern,No,_Pattern,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,pattern,_field,10,pattern,ast.pattern,"ast.Attribute(value=ast.Name('ast'), attr='pattern')","ast.arg('pattern', ast.Attribute(value=ast.Name('ast'), attr='pattern'))"
match_case,3,12,10,AST,False,No,No,expr | None,expr | None,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,guard,_field,10,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('guard', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
match_case,3,12,10,AST,False,No,No,list(stmt),list[stmt],No,No,True,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'match_case')",10,body,_field,10,list_stmt,list[ast.stmt],"ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt'))","ast.arg('body', ast.Subscript(value=ast.Name('list'), slice=ast.Attribute(value=ast.Name('ast'), attr='stmt')))"
mod,3,12,10,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'mod')",-1,No,No,-1,No,No,No,No
operator,3,12,10,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'operator')",-1,No,No,-1,No,No,No,No
pattern,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,lineno,_attribute,10,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
pattern,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,col_offset,_attribute,10,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
pattern,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,end_lineno,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
pattern,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'pattern')",10,end_col_offset,_attribute,10,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
slice,3,12,10,AST,True,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'slice')",-1,No,No,-1,No,No,No,No
stmt,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,lineno,_attribute,-1,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
stmt,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,col_offset,_attribute,-1,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
stmt,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,end_lineno,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
stmt,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'stmt')",-1,end_col_offset,_attribute,-1,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
type_ignore,3,12,10,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'type_ignore')",-1,No,No,-1,No,No,No,No
type_param,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'type_param')",12,lineno,_attribute,12,No,int,ast.Name('int'),"ast.arg('lineno', ast.Name('int'))"
type_param,3,12,10,AST,False,No,No,No,int,No,No,False,No,True,int,No,"ast.Attribute(ast.Name('ast'), 'type_param')",12,col_offset,_attribute,12,No,int,ast.Name('int'),"ast.arg('col_offset', ast.Name('int'))"
type_param,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'type_param')",12,end_lineno,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_lineno', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
type_param,3,12,10,AST,False,No,No,No,int | None,No,No,False,,True,int,No,"ast.Attribute(ast.Name('ast'), 'type_param')",12,end_col_offset,_attribute,12,No,int | None,"ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('end_col_offset', ast.BinOp(left=ast.Name('int'), op=ast.BitOr(), right=ast.Constant(value=None)))"
unaryop,3,12,10,AST,False,No,No,No,No,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'unaryop')",-1,No,No,-1,No,No,No,No
withitem,3,12,10,AST,False,No,No,expr,expr,No,No,False,No,False,No,No,"ast.Attribute(ast.Name('ast'), 'withitem')",-1,context_expr,_field,-1,expr,ast.expr,"ast.Attribute(value=ast.Name('ast'), attr='expr')","ast.arg('context_expr', ast.Attribute(value=ast.Name('ast'), attr='expr'))"
withitem,3,12,10,AST,False,No,No,expr | None,expr | None,No,No,False,ast.Constant(None),False,No,No,"ast.Attribute(ast.Name('ast'), 'withitem')",-1,optional_vars,_field,-1,exprOrNone,ast.expr | None,"ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None))","ast.arg('optional_vars', ast.BinOp(left=ast.Attribute(value=ast.Name('ast'), attr='expr'), op=ast.BitOr(), right=ast.Constant(value=None)))"
