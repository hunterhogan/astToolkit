{
	// astToolkit workspace
	// snippet name: `scope`, `prefix`, `body`, `description`
	// `scope`: The scope of VS Code-defined languages to which the snippet is limited. An omitted or empty `scope`: no limit, therefore all languages. Otherwise, one or more comma-separated VS Code language-ids. Why did they not use an array ([a list]) here? Elehpino.
	// `prefix`: The special string that will be replaced by the snippet. It can be a string or an [array of strings].
	// `body`: The body of the snippet. It can be a string or an [array of strings]. If it is an [array], each element, which are separated by commas, will be joined with a newline character: effectively, the commas are newlines.
	// 		Tab stops are numbered placeholders that allow you to navigate through the snippet. They are represented by $1, $2, etc. The final cursor position is represented by $0.
	// 		Placeholders are represented by ${1:label}, ${2:another}, etc. Placeholders with the same ids are connected.
	// 		`body` variables are represented by ${variableName}. The variable name can be a string or an array of strings, with an optional default value, ${variableName:defaultValue}.
	// `description`: description of the snippet displayed in the IntelliSense context menu when you type the `prefix`.
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// },
	"木": {
		"scope": "markdown,plaintext,python",
		"prefix": "mu",
		"body": [
			"木"
		],
		"description": "木 (mù): tree, short for abstract syntax tree (AST)"
	},
	"个": {
		"scope": "markdown,plaintext,python",
		"prefix": "ge",
		"body": [
			"个"
		],
		"description": "个 (gè): generic measure word"
	},
}
